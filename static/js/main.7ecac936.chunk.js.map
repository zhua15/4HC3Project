{"version":3,"sources":["Pages/PopupPage.tsx","Components/MenuItemCard.tsx","Components/Cart.tsx","Pages/MainPage.tsx","Pages/SummaryPage.tsx","App.tsx","index.tsx"],"names":["customizationType","page","props","_React$useState","React","useState","_React$useState2","Object","slicedToArray","scroll","_React$useState3","_React$useState4","values","setValues","options","customizationOptions","forEach","option","componentType","listOptions","listOption","label","react_default","a","createElement","optionName","value","price","style","marginLeft","concat","push","FormControlLabel","control","Radio","key","defaultValue","FormControl","sx","marginBottom","FormLabel","color","id","RadioGroup","aria-labelledby","name","onChange","e","summaryViewLabel","event","objectSpread","defineProperty","target","Checkbox","arguments","length","undefined","tempValues","checked","newValues","handleCheckboxChange","FormGroup","handleClose","setOpen","descriptionElementRef","useRef","useEffect","open","descriptionElement","current","focus","title","fontSize","fontStyle","Dialog","fullWidth","maxWidth","onClose","aria-describedby","DialogTitle","Box","component","height","width","alt","src","image","DialogContent","dividers","DialogContentText","ref","tabIndex","DialogActions","Button","onClick","tempItem","quantity","tempData","console","log","Array","isArray","tempName","split","tempPrice","parseInt","setCart","toConsumableArray","cart","ItemCard","shadow","setShadow","react","Card","boxShadow","cursor","backgroundColor","handleClick","item","onMouseOver","onMouseOut","CardMedia","Image","CardContent","Typography","variant","Name","mb","Price","CardActions","size","onMouseDown","stopPropagation","preventDefault","addToCart","Root","styled","_ref","theme","palette","mode","grey","background","default","StyledBox","_ref2","_ref3","borderRadius","position","top","left","navigate","useNavigate","handleDelete","index","indexOf","temp","splice","Row","getOptionsubtotal","optionPrice","map","Fragment","TableRow","& > *","borderBottom","TableCell","Delete_default","IconButton","aria-label","KeyboardArrowUp_default","KeyboardArrowDown_default","scope","align","toFixed","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","ml","mr","Table","TableBody","CssBaseline","emotion_react_browser_esm","styles",".MuiDrawer-root > .MuiPaper-root","bleeding","overflow","SwipeableDrawer","anchor","toggleDrawer","onOpen","swipeAreaWidth","disableSwipeToOpen","ModalProps","keepMounted","px","pb","TableContainer","Paper","minWidth","TableHead","reduce","sum","optionSum","optionItem","textAlign","setHistory","TabPanel","children","other","objectWithoutProperties","assign","role","hidden","Box_Box","p","selectedItem","setSelectedItem","_React$useState5","_React$useState6","openCart","setOpenCart","_React$useState7","_React$useState8","_React$useState9","_React$useState10","mains","setMains","_React$useState11","_React$useState12","Snacks","setSnacks","_React$useState13","_React$useState14","desserts","setDesserts","_React$useState15","_React$useState16","drinks","setDrinks","document","body","handleClickOpen","popup","rating","Rating","ingrediants","Ingrediants","calories","Calories","menuItem","a11yProps","aria-controls","tempMains","tempSnacks","tempDesserts","tempDrinks","itemCard","Grid","xs","Tab","_React$useState17","_React$useState18","setValue","m","borderColor","display","justifyContent","alignItems","Tabs","newValue","paddingLeft","ShoppingCart","container","spacing","direction","PopupPage","Cart","orderHistoryProps","summary","_useState","_useState2","tip","setTip","subtotal","order","itemPrice","getSubtotalPrice","tax","totalPrice","mx","my","ButtonGroup","App","Single","Multi","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","dist","react_router_dist","path","element","MainPage","SummaryPage","Component","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7ecac936.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl, { formControlClasses } from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Box from '@mui/material/Box';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { itemProps, optionsProps } from '../Components/Cart';\r\n\r\nconst primaryColor = '#1976d2'\r\n\r\nexport interface popupProps {\r\n  open: boolean\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n  setCart: any\r\n  cart: any,\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  rating: number;\r\n  ingrediants?: string[];\r\n  calories: number;\r\n  customizationOptions?: custimizationOptionProps[];\r\n}\r\n\r\nexport interface custimizationOptionProps {\r\n  componentType: string;  //USE \"Single\" or \"Multi\" in json data file\r\n  label: string;\r\n  summaryViewLabel: string;\r\n  options: custimizationOptionsList[]\r\n}\r\n\r\nexport enum customizationType {\r\n  Single = \"Single\",\r\n  Multi = \"Multi\"\r\n}\r\n\r\nexport interface custimizationOptionsList {\r\n  optionName: string,\r\n  price?: number\r\n}\r\n\r\ninterface options {\r\n  subheaderlist: []\r\n}\r\n\r\ninterface subheader {\r\n  subheadername: string;\r\n  subheaderelements: string[];\r\n}\r\n\r\nconst page = (props: popupProps) => {\r\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('body');\r\n  const [values, setValues] = React.useState({} as any);\r\n  const options: JSX.Element[] = [];\r\n\r\n  const handleRadioChange = (label: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValues(\r\n      {\r\n        ...values,\r\n        [label]: (event.target as HTMLInputElement).value\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleCheckboxChange = (label: string, price: number = 0, event: React.ChangeEvent<HTMLInputElement>) => {\r\n    let tempValues: custimizationOptionsList[] = []\r\n    if ((values as any)[label]) {\r\n      tempValues = (values as any)[label];\r\n    } else {\r\n      tempValues = [];\r\n    }\r\n    if (event.target.checked) {\r\n      if (price !== 0) {\r\n        tempValues.push({ optionName: (event.target as HTMLInputElement).name, price: price });\r\n      } else {\r\n        tempValues.push({ optionName: (event.target as HTMLInputElement).name });\r\n      }\r\n    } else {\r\n      const newValues: custimizationOptionsList[] = [];\r\n      tempValues.forEach((value) => {\r\n        if (value.optionName !== (event.target as HTMLInputElement).name) {\r\n          newValues.push(value);\r\n        }\r\n      })\r\n      tempValues = newValues;\r\n    }\r\n    setValues(\r\n      {\r\n        ...values,\r\n        [label]: tempValues,\r\n      }\r\n    );\r\n  };\r\n\r\n  if (props.customizationOptions) {\r\n    props.customizationOptions.forEach((option) => {\r\n      if (option.componentType === 'Single') {\r\n        const listOptions: JSX.Element[] = [];\r\n        option.options.forEach((listOption) => {\r\n          let label: JSX.Element = <label>{listOption.optionName}</label>;\r\n          let value: string = listOption.optionName;\r\n          if (listOption.price) {\r\n            label = <label>{listOption.optionName} <label style={{ marginLeft: '2rem' }}>+${listOption.price}</label></label>;\r\n            value = `${listOption.optionName}--${listOption.price}`\r\n          }\r\n          listOptions.push(\r\n            <FormControlLabel value={value} control={< Radio />} label={label} key={listOption.optionName} />\r\n          );\r\n        });\r\n        let defaultValue: string = option.options[0].optionName;\r\n        if (option.options[0].price) {\r\n          defaultValue = `${option.options[0].optionName}--${option.options[0].price}`\r\n        }\r\n        options.push(\r\n          <FormControl\r\n            key={option.label}\r\n            sx={{\r\n              marginBottom: '2rem',\r\n            }}\r\n          >\r\n            <FormLabel sx={{ color: primaryColor }} id=\"radio-buttons-group-label\">{<b>{option.label}</b>}</FormLabel>\r\n            <RadioGroup\r\n              aria-labelledby=\"radio-buttons-group-label\"\r\n              name=\"radio-buttons-group\"\r\n              defaultValue={defaultValue}\r\n              onChange={(e) => handleRadioChange(option.summaryViewLabel, e)}\r\n              value={(values as any)[option.label]}\r\n            >\r\n              {listOptions}\r\n            </RadioGroup>\r\n          </FormControl>\r\n        );\r\n        options.push(<br></br>);\r\n      } else if (option.componentType === 'Multi') {\r\n        const listOptions: JSX.Element[] = [];\r\n        option.options.forEach((listOption) => {\r\n          let label: JSX.Element = <label>{listOption.optionName}</label>;\r\n          if (listOption.price) {\r\n            label = <label>{listOption.optionName} <label style={{ marginLeft: '2rem' }}>+${listOption.price}</label></label>;\r\n          }\r\n          listOptions.push(\r\n            <FormControlLabel control={<Checkbox name={listOption.optionName} onChange={(e) => handleCheckboxChange(option.summaryViewLabel, listOption.price, e)} />} label={label} key={listOption.optionName} />\r\n          );\r\n        });\r\n        options.push(\r\n          <FormControl\r\n            key={option.label}\r\n            sx={{\r\n              marginBottom: '2rem',\r\n            }}\r\n          >\r\n            <FormLabel sx={{ color: primaryColor }} id=\"radio-buttons-group-label\">{<b>{option.label}</b>}</FormLabel>\r\n            <FormGroup>\r\n              {listOptions}\r\n            </FormGroup>\r\n          </FormControl >\r\n        );\r\n        options.push(<br></br>);\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (props.open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n\r\n      if (props.customizationOptions) {\r\n        props.customizationOptions.forEach((option) => {\r\n          if (option.componentType == 'Single') {\r\n            let defaultValue: string = option.options[0].optionName;\r\n            if (option.options[0].price) {\r\n              defaultValue = `${option.options[0].optionName}--${option.options[0].price}`\r\n            }\r\n            setValues(\r\n              {\r\n                ...values,\r\n                [option.summaryViewLabel]: defaultValue,\r\n              }\r\n            );\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }, [props.open]);\r\n\r\n  const title = <div><label style={{ color: primaryColor, fontSize: \"2rem\", fontStyle: \"bold\" }}>{props.name}</label><br></br><label>{`$${props.price} `}</label></div>;\r\n\r\n  const handleSubmit = () => {\r\n    const tempItem = { name: props.name, quantity: 1, price: props.price } as itemProps;\r\n    const tempData = [] as optionsProps[];\r\n    for (const key in values) {\r\n      console.log(values[key]);\r\n      if (Array.isArray(values[key])) {\r\n        console.log(values[key]);\r\n        values[key].forEach((value: any) => {\r\n          tempData.push({ name: value.optionName, price: value.price ? value.price : 0 });\r\n        });\r\n      } else {\r\n        const tempName = values[key].split('--')[0]\r\n        let tempPrice = values[key].split('--')[1]\r\n        tempData.push({ name: tempName, price: parseInt(tempPrice ? tempPrice : '0') });\r\n      }\r\n    }\r\n    tempItem.options = tempData;\r\n    console.log(tempItem);\r\n    props.setCart([...props.cart, tempItem]);\r\n    handleClose();\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">{title}</DialogTitle>\r\n        <Box\r\n          component=\"img\"\r\n          sx={{\r\n            height: '25rem',\r\n            width: '100%',\r\n          }}\r\n          alt={props.name}\r\n          src={props.image}\r\n        />\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n            {options}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleSubmit}>Subscribe</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default page;","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardMedia from '@mui/material/CardMedia';\r\n\r\ntype Props = {\r\n    item: any;\r\n    handleClick: (i: number) => void;\r\n    addToCart: (item: any) => void,\r\n}\r\n\r\nexport default function ItemCard(props: Props) {\r\n    const [shadow, setShadow] = React.useState(1);\r\n    return (\r\n        <Card sx={{ maxWidth: 350, boxShadow: shadow, cursor: \"pointer\", backgroundColor: \"linen\" }} onClick={() => props.handleClick(props.item)} onMouseOver={() => setShadow(3)} onMouseOut={() => setShadow(1)}>\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"200\"\r\n                image={props.item.Image}\r\n                alt=\"dish image\"\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"h6\">\r\n                    {props.item.Name}\r\n                </Typography>\r\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                    $ {props.item.Price}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onMouseDown={event => event.stopPropagation()}\r\n                    onClick={event => {\r\n                        event.stopPropagation();\r\n                        event.preventDefault();\r\n                        props.addToCart(props.item);\r\n                    }}>Order Now</Button>\r\n            </CardActions>\r\n        </Card >\r\n    );\r\n}","import React from 'react';\r\nimport { Global } from '@emotion/react';\r\nimport { styled } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { grey } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n\r\nexport interface cartProps {\r\n    cart: itemProps[],\r\n    setCart: any,\r\n    bleeding: number,\r\n    open: boolean,\r\n    toggleDrawer: any,\r\n    setHistory: any,\r\n}\r\n\r\nexport interface itemProps {\r\n    name: string;\r\n    price: number;\r\n    quantity: number;\r\n    options?: optionsProps[];\r\n}\r\n\r\nexport interface optionsProps {\r\n    name: string;\r\n    price: number;\r\n}\r\n\r\nconst Root = styled('div')(({ theme }) => ({\r\n    height: '100%',\r\n    backgroundColor:\r\n        theme.palette.mode === 'dark' ? grey[100] : theme.palette.background.default,\r\n}));\r\n\r\nconst StyledBox = styled(Box)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : 'linen',\r\n}));\r\n\r\nconst Puller = styled(Box)(({ theme }) => ({\r\n    width: 30,\r\n    height: 6,\r\n    backgroundColor: theme.palette.mode === 'dark' ? grey[300] : grey[900],\r\n    borderRadius: 3,\r\n    position: 'absolute',\r\n    top: 8,\r\n    left: 'calc(50% - 15px)',\r\n}));\r\n\r\nconst cart = (props: cartProps) => {\r\n\r\n    let navigate = useNavigate();\r\n    const routeChange = () => {\r\n        props.setHistory()\r\n        let path = `/summary`;\r\n        navigate(path);\r\n    }\r\n    \r\n    const order = () => {\r\n        props.setHistory()\r\n        props.setCart([])\r\n    }\r\n\r\n    const handleDelete = (item: itemProps) => {\r\n        var index = props.cart.indexOf(item);\r\n        if (index !== -1) {\r\n            var temp = props.cart\r\n            temp.splice(index, 1)\r\n            console.log(temp)\r\n            props.setCart([...temp])\r\n        }\r\n    }\r\n\r\n    const Row = (props: {item: itemProps}) => {\r\n        const { item } = props;\r\n        const [open, setOpen] = React.useState(false);\r\n        \r\n        const getOptionsubtotal = (item: itemProps) => {\r\n          var optionPrice = 0\r\n          if (item.options) {\r\n            item.options.map((option) => {\r\n              optionPrice += option.price\r\n            })\r\n          }\r\n          return optionPrice\r\n        }   \r\n  \r\n        return (\r\n          <React.Fragment>\r\n            <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n              <TableCell>\r\n              <Button onClick={(a) => handleDelete(item)}>\r\n                    <DeleteIcon style={{\r\n                    color: \"#FF0000\",\r\n                }}/>\r\n                </Button>\r\n                { item.options && item.options.length > 0 ?\r\n                  <IconButton\r\n                  aria-label=\"expand row\"\r\n                  size=\"small\"\r\n                  onClick={() => setOpen(!open)}\r\n                  >\r\n                  {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                  </IconButton>\r\n                  : <></>\r\n                }\r\n               \r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">{item.name}</TableCell>\r\n              <TableCell align=\"right\">${item.price}</TableCell>\r\n              <TableCell align=\"right\">\r\n                {(item.options && getOptionsubtotal(item) > 0)\r\n                  ? \"$\" + getOptionsubtotal(item) \r\n                  : \"\"}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{item.quantity}</TableCell>\r\n              <TableCell align=\"right\">${\r\n              item.options !== undefined \r\n                ? ((item.price + getOptionsubtotal(item) )* item.quantity).toFixed(2)\r\n                : (item.price * item.quantity)\r\n              }\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                  <Box ml=\"61%\" mr={3}>\r\n                    <Table size=\"small\" aria-label=\"purchases\" >\r\n                    <TableRow>\r\n                    </TableRow>\r\n                      {(item.options === undefined) \r\n                        ? <></> \r\n                        : // render each option name and price in condensed table\r\n                        <TableBody>\r\n                          {item.options &&\r\n                          item.options.map((option:optionsProps) => (\r\n                            <TableRow>\r\n                              <TableCell align=\"left\">{option.name}</TableCell>\r\n                              <TableCell align=\"right\">\r\n                                {option.price == 0 ? '' : '+ $' + option.price}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                        </TableBody>\r\n                      }\r\n                    </Table>\r\n                  </Box>\r\n                </Collapse>\r\n              </TableCell>\r\n            </TableRow>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n\r\n    const CollapsibleTable = () => {\r\n        return (\r\n          <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 700 }} aria-label=\"cart table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell><b>Details</b></TableCell>\r\n                  <TableCell><b>Name</b></TableCell>\r\n                  <TableCell align=\"right\"><b>Price</b></TableCell>\r\n                  <TableCell align=\"right\"><b>Options</b></TableCell>\r\n                  <TableCell align=\"right\"><b>Quantity</b></TableCell>\r\n                  <TableCell align=\"right\"><b>Total</b></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.cart.map((item) => ( <Row key={item.name} item={item} /> ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <Root>\r\n            <CssBaseline />\r\n            <Global\r\n                styles={{\r\n                    '.MuiDrawer-root > .MuiPaper-root': {\r\n                        height: `calc(90% - ${props.bleeding}px)`,\r\n                        overflow: 'visible',\r\n                    },\r\n                }}\r\n            />\r\n            <SwipeableDrawer\r\n                anchor=\"bottom\"\r\n                open={props.open}\r\n                onClose={props.toggleDrawer()}\r\n                onOpen={props.toggleDrawer()}\r\n                swipeAreaWidth={props.bleeding}\r\n                disableSwipeToOpen={false}\r\n                ModalProps={{\r\n                    keepMounted: true,\r\n                }}\r\n            >\r\n                <StyledBox\r\n                    sx={{\r\n                        px: 2,\r\n                        pb: 2,\r\n                        height: '30%',\r\n                    }}\r\n                >\r\n                    &nbsp;\r\n                    &nbsp;\r\n                    &nbsp;\r\n                    &nbsp;\r\n                    <Typography\r\n                        align='center'\r\n                        variant='h2'\r\n                    >\r\n                        Shopping Cart\r\n                    </Typography>\r\n                </StyledBox>\r\n                <StyledBox\r\n                    sx={{\r\n                        px: 2,\r\n                        pb: 2,\r\n                        height: '100%',\r\n                        overflow: 'auto',\r\n                    }}\r\n                >\r\n                    <CollapsibleTable/>\r\n                    <Typography\r\n                        align='center'\r\n                        variant='h6'\r\n                    >\r\n                        Total: ${(props.cart.reduce((sum: number, item: itemProps) =>\r\n                            sum + (item.quantity * (item.price + (\r\n                                item.options ? (\r\n                                    item.options.reduce((optionSum: number, optionItem) => optionSum + optionItem.price, 0)\r\n                                ) as number : 0\r\n                            ))), 0)).toFixed(2)}\r\n                    </Typography>\r\n                    <Box textAlign='center'>\r\n                        <Button variant='contained' onClick={order}>\r\n                            Order\r\n                        </Button>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Button variant='contained' onClick={routeChange}>\r\n                            Order and Pay\r\n                        </Button>\r\n                    </Box>\r\n                </StyledBox >\r\n            </SwipeableDrawer >\r\n        </Root >\r\n    );\r\n}\r\n\r\nexport default cart;","import React, { useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Popup, { custimizationOptionProps, custimizationOptionsList, customizationType, popupProps } from './PopupPage';\r\nimport ItemCard from \"../Components/MenuItemCard\";\r\nimport * as menuItem from './../data/menuData.json';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Cart, { itemProps, optionsProps } from \"../Components/Cart\";\r\nimport { Box, height } from '@mui/system';\r\nimport Typography from '@mui/material/Typography';\r\nimport { ShoppingCart } from '@mui/icons-material';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: number;\r\n    value: number;\r\n}\r\n\r\nconst customizationOptions: custimizationOptionProps[] = [\r\n    {\r\n        componentType: 'Single',\r\n        label: \"Select Cheese\",\r\n        summaryViewLabel: \"Cheese\",\r\n        options: [\r\n            {\r\n                optionName: \"Mozerella\"\r\n            } as custimizationOptionsList\r\n            ,\r\n            {\r\n                optionName: \"Cheddar\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Special Cheese\",\r\n                price: 2.99\r\n            } as custimizationOptionsList\r\n        ] as custimizationOptionsList[]\r\n    },\r\n    {\r\n        componentType: 'Multi',\r\n        label: \"Select Toppings\",\r\n        summaryViewLabel: \"Toppings\",\r\n        options: [\r\n            {\r\n                optionName: \"Bacon\",\r\n                price: 1.99\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Pepporoni\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Mushrooms\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Green Peppers\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Onions\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Yellow Peppers\"\r\n            } as custimizationOptionsList\r\n        ]\r\n    }\r\n]\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }} >\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nconst page = (props: { orderHistoryProps: itemProps[] }) => {\r\n    // const { orderHistory, setOrderHistory } = props;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedItem, setSelectedItem] = React.useState({} as popupProps);\r\n    const [openCart, setOpenCart] = React.useState(false);\r\n    const [cart, setCart] = React.useState([] as itemProps[]);\r\n    const [mains, setMains] = React.useState([] as JSX.Element[]);\r\n    const [Snacks, setSnacks] = React.useState([] as JSX.Element[]);\r\n    const [desserts, setDesserts] = React.useState([] as JSX.Element[]);\r\n    const [drinks, setDrinks] = React.useState([] as JSX.Element[]);\r\n\r\n    useEffect(() => { document.body.style.backgroundColor = 'lightcyan' }, [])\r\n\r\n    const toggleDrawer = () => () => {\r\n        setOpenCart(!openCart);\r\n    };\r\n\r\n    // Need to add this function to onClick of all menu cards and pass the card values to setSelectedItem.\r\n    // Card values should be of type popupProps and each menu card should have these values created\r\n    const PATH = \".\" // needed for localpath when displaying to index.html\r\n\r\n    const handleClickOpen = (item: any) => {\r\n        setOpen(true);\r\n        const popup: popupProps = {\r\n            open: true,\r\n            setOpen: setOpen,\r\n\r\n            name: item.Name,\r\n            price: item.Price,\r\n            image: PATH + item.Image,\r\n            rating: item.Rating,\r\n            ingrediants: item.Ingrediants,\r\n            calories: item.Calories,\r\n            customizationOptions: item.customizationOptions,\r\n            setCart: setCart,\r\n            cart: cart,\r\n\r\n        }\r\n        setSelectedItem(popup);\r\n    };\r\n\r\n    const sleep = (ms: number) => new Promise((r) => setTimeout(r, ms));\r\n\r\n    const addToCart = (item: any) => {\r\n        console.log(cart);\r\n        const tempItem = { name: item.Name, quantity: 1, price: item.Price } as itemProps;\r\n        console.log([...cart, tempItem]);\r\n        setCart([...cart, tempItem]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(cart);\r\n    }, [cart])\r\n\r\n    const setOrderHistory = () => {\r\n        console.log(\"cart\", cart)\r\n        cart.map((item) => {\r\n            props.orderHistoryProps.push(item)\r\n        })\r\n        // props.orderHistoryProps.extend(...cart)\r\n    }\r\n\r\n\r\n    const itemNum = menuItem.menuItems.length;\r\n\r\n    useEffect(() => {\r\n        console.log(menuItem.menuItems);\r\n        let tempMains: JSX.Element[] = [];\r\n        let tempSnacks: JSX.Element[] = [];\r\n        let tempDesserts: JSX.Element[] = [];\r\n        let tempDrinks: JSX.Element[] = [];\r\n        menuItem.menuItems.forEach((item) => {\r\n            const itemCard =\r\n                (<Grid item xs={4}>\r\n                    <ItemCard item={item} handleClick={handleClickOpen} addToCart={addToCart} />\r\n                </Grid>)\r\n            if (item.Tab === \"Mains\") {\r\n                tempMains.push(itemCard);\r\n            } else if (item.Tab === \"Snacks\") {\r\n                tempSnacks.push(itemCard);\r\n            } else if (item.Tab === \"Desserts\") {\r\n                tempDesserts.push(itemCard);\r\n            } else if (item.Tab === \"Drinks\") {\r\n                tempDrinks.push(itemCard);\r\n            }\r\n        })\r\n        setMains(tempMains);\r\n        setSnacks(tempSnacks);\r\n        setDesserts(tempDesserts);\r\n        setDrinks(tempDrinks);\r\n    }, [cart]);\r\n\r\n    function a11yProps(index: number) {\r\n        return {\r\n            id: `simple-tab-${index}`,\r\n            'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChangeTabs = (event: React.SyntheticEvent, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    //Button can be removed but need to add an onClick function to all the menu cards, keep the line to render the popup as well\r\n    return (\r\n        <div style={{ background: 'lightCyan' }}>\r\n            <div>\r\n                <Box\r\n                    m={1}\r\n                    borderBottom={1}\r\n                    borderColor='divider'\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"flex-end\">\r\n                    <div>\r\n                        <Tabs value={value} onChange={handleChangeTabs} aria-label=\"basic tabs\">\r\n                            <Tab label=\"Mains\" {...a11yProps(0)} />\r\n                            <Tab label=\"Snacks\" {...a11yProps(1)} />\r\n                            <Tab label=\"Desserts\" {...a11yProps(2)} />\r\n                            <Tab label=\"Drinks\" {...a11yProps(3)} />\r\n                        </Tabs>\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"2rem\", paddingBottom: \"0.5rem\" }}>\r\n                        <Button variant='contained' onClick={toggleDrawer()}><ShoppingCart /></Button>\r\n                    </div>\r\n                </Box >\r\n                <TabPanel value={value} index={0}>\r\n                    <Grid container spacing={2} direction='row'>\r\n                        {mains}\r\n                    </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <Grid container spacing={2} direction='row'>\r\n                        {Snacks}\r\n                    </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    <Grid container spacing={2} direction='row'>\r\n                        {desserts}\r\n                    </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                    <Grid container spacing={2} direction='row'>\r\n                        {drinks}\r\n                    </Grid>\r\n                </TabPanel>\r\n                {open ? <Popup {...selectedItem} /> : null}\r\n                <Cart cart={cart} setCart={setCart} bleeding={0} open={openCart} toggleDrawer={toggleDrawer} setHistory={setOrderHistory}/>\r\n            </div >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default page;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react'; \r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nimport { itemProps, optionsProps } from \"../Components/Cart\";\r\n\r\n\r\n\r\n// summary page component\r\nconst summary = (props: {orderHistoryProps: itemProps[]}) => {\r\n  useEffect(() => { document.body.style.backgroundColor = 'lightcyan' }, [])\r\n\r\n  console.log(props)\r\n   const [tip, setTip] = useState(0)\r\n\r\n  // calculates subtotal \r\n  const getSubtotalPrice = () => {\r\n    var sum = 0\r\n    props.orderHistoryProps.map((order) => {\r\n      var itemPrice = 0\r\n      itemPrice += order.price \r\n      if (order.options) {\r\n        order.options.map((option) => { itemPrice += option.price })\r\n      }\r\n      itemPrice *= order.quantity\r\n      sum += itemPrice\r\n    })\r\n    return sum\r\n  }\r\n   const subtotal = getSubtotalPrice()\r\n\r\n   const tax = (subtotal * 0.13)\r\n   const totalPrice = subtotal + tax + (subtotal * tip)\r\n\r\n  // for back button\r\n   let navigate = useNavigate(); \r\n   const navigateToMainPage = () => {\r\n      let path = `/`\r\n      navigate(path)\r\n   }\r\n\r\n\r\n    // creates each row (collapsible) of the CollapsibleTable component\r\n    const Row = (props: {item: itemProps}) => {\r\n      const { item } = props;\r\n      const [open, setOpen] = React.useState(false);\r\n      \r\n      const getOptionsubtotal = (item: itemProps) => {\r\n        var optionPrice = 0\r\n        if (item.options) {\r\n          item.options.map((option) => {\r\n            optionPrice += option.price\r\n          })\r\n        }\r\n        return optionPrice\r\n      }   \r\n\r\n      return (\r\n        <React.Fragment>\r\n          <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n            <TableCell>\r\n              { item.options && item.options.length > 0 ?\r\n                <IconButton\r\n                aria-label=\"expand row\"\r\n                size=\"small\"\r\n                onClick={() => setOpen(!open)}\r\n                >\r\n                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                </IconButton>\r\n                : <></>\r\n              }\r\n             \r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">{item.name}</TableCell>\r\n            <TableCell align=\"right\">${item.price}</TableCell>\r\n            <TableCell align=\"right\">\r\n              {(item.options && getOptionsubtotal(item) > 0)\r\n                ? \"$\" + getOptionsubtotal(item) \r\n                : \"\"}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{item.quantity}</TableCell>\r\n            <TableCell align=\"right\">${\r\n            item.options !== undefined \r\n              ? ((item.price + getOptionsubtotal(item) )* item.quantity).toFixed(2)\r\n              : (item.price * item.quantity)\r\n            }\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <Box ml=\"61%\" mr={3}>\r\n                  <Table size=\"small\" aria-label=\"purchases\" >\r\n                  <TableRow>\r\n                  </TableRow>\r\n                    {(item.options === undefined) \r\n                      ? <></> \r\n                      : // render each option name and price in condensed table\r\n                      <TableBody>\r\n                        {item.options &&\r\n                        item.options.map((option:optionsProps) => (\r\n                          <TableRow>\r\n                            <TableCell align=\"left\">{option.name}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              {option.price == 0 ? '' : '+ $' + option.price}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    }\r\n                  </Table>\r\n                </Box>\r\n              </Collapse>\r\n            </TableCell>\r\n          </TableRow>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    \r\n    // parent table\r\n     const CollapsibleTable = () => {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell><b>Details</b></TableCell>\r\n                <TableCell><b>Name</b></TableCell>\r\n                <TableCell align=\"right\"><b>Price</b></TableCell>\r\n                <TableCell align=\"right\"><b>Options</b></TableCell>\r\n                <TableCell align=\"right\"><b>Quantity</b></TableCell>\r\n                <TableCell align=\"right\"><b>Total</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.orderHistoryProps.map((item) => ( <Row key={item.name} item={item} /> ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    }\r\n\r\n    // table that displays subtotal, tax and tip \r\n    const Subtotal = () => {\r\n      return (\r\n        <>\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 700 }} aria-label=\"spanning table\">\r\n             <TableBody>\r\n              <TableRow>\r\n                <TableCell>Subtotal</TableCell>\r\n                <TableCell align=\"right\"></TableCell>\r\n                <TableCell align=\"right\">${subtotal.toFixed(2)}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Tax</TableCell>\r\n                <TableCell align=\"right\">{\"13%\"}</TableCell>\r\n                <TableCell align=\"right\">${tax.toFixed(2)}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Tip</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <ButtonGroup variant=\"outlined\">\r\n                       <Button \r\n                        onClick={() => setTip(0)}\r\n                        color={tip === 0 ? \"secondary\" : \"primary\"}\r\n                       > \r\n                        0%\r\n                       </Button>\r\n                       <Button \r\n                        onClick={() => setTip(0.1)}\r\n                        color={tip === 0.1 ? \"secondary\" : \"primary\"}\r\n                       >\r\n                        10%\r\n                       </Button>\r\n\r\n                       <Button \r\n                        onClick={() => setTip(0.2)}\r\n                        color={tip === 0.2 ? \"secondary\" : \"primary\"}\r\n                       >\r\n                        20%\r\n                       </Button>\r\n                    </ButtonGroup>\r\n                </TableCell>\r\n                <TableCell align=\"right\">${(tip * subtotal).toFixed(2)}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box textAlign='right' mr={3}>\r\n          <h2>Total: ${totalPrice.toFixed(2)}</h2>\r\n        </Box>\r\n        </>\r\n      );\r\n    }\r\n\r\n\r\n    // main \r\n    return (\r\n         <Box \r\n          mx={10} \r\n          my={3} \r\n         >\r\n            <h1>Payment</h1>\r\n            <h2>Order History</h2>\r\n            <CollapsibleTable/>\r\n            \r\n            <h2>Summary</h2>\r\n            <Subtotal/>\r\n         \r\n            <Box\r\n              my={5} \r\n              mx={3}\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\"\r\n              }}\r\n            >\r\n               <Button \r\n                variant=\"contained\"\r\n                onClick={navigateToMainPage}\r\n               >Back</Button>\r\n               <Button variant=\"contained\">Proceed to Payment</Button>\r\n            </Box>\r\n         </Box>\r\n    );\r\n}\r\n \r\nexport default summary;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport Menu from './Pages/MainPage';\r\nimport Popup, { custimizationOptionProps, custimizationOptionsList, customizationType, popupProps } from './Pages/PopupPage';\r\nimport Summary from './Pages/SummaryPage';\r\nimport Cart, { cartProps, itemProps, optionsProps } from './Components/Cart'\r\n\r\nconst customizationOptions: custimizationOptionProps[] = [\r\n  {\r\n    componentType: customizationType.Single,\r\n    label: \"Select Cheese\",\r\n    summaryViewLabel: \"Cheese\",\r\n    options: [\r\n      {\r\n        optionName: \"Mozerella\"\r\n      } as custimizationOptionsList\r\n      ,\r\n      {\r\n        optionName: \"Cheddar\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Special Cheese\",\r\n        price: 2.99\r\n      } as custimizationOptionsList\r\n    ] as custimizationOptionsList[]\r\n  },\r\n  {\r\n    componentType: customizationType.Multi,\r\n    label: \"Select Toppings\",\r\n    summaryViewLabel: \"Toppings\",\r\n    options: [\r\n      {\r\n        optionName: \"Bacon\",\r\n        price: 1.99\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Pepporoni\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Mushrooms\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Green Peppers\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Onions\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Yellow Peppers\"\r\n      } as custimizationOptionsList\r\n    ]\r\n  }\r\n]\r\n\r\nclass App extends Component {\r\n  render() {\r\n    var orderHistory:itemProps[]  = []\r\n    var props = {\r\n      orderHistoryProps: orderHistory\r\n    }\r\n\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Menu {...props}/>} />\r\n            <Route path=\"/summary\" element={<Summary {...props}/>} />\r\n          </Routes>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}