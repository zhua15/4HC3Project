{"version":3,"sources":["Pages/PopupPage.tsx","Components/MenuItemCard.tsx","Components/Cart.tsx","Pages/MainPage.tsx","Components/OrderHistoryCard.tsx","Pages/SummaryPage.tsx","App.tsx","index.tsx"],"names":["customizationType","page","props","console","log","_React$useState","React","useState","_React$useState2","Object","slicedToArray","scroll","_React$useState3","_React$useState4","values","setValues","options","customizationOptions","forEach","option","componentType","listOptions","listOption","label","react_default","a","createElement","optionName","value","price","style","marginLeft","concat","push","FormControlLabel","control","Radio","key","defaultValue","FormControl","sx","marginBottom","FormLabel","color","id","RadioGroup","aria-labelledby","name","onChange","e","summaryViewLabel","event","objectSpread","defineProperty","target","Checkbox","arguments","length","undefined","tempValues","checked","newValues","handleCheckboxChange","FormGroup","handleClose","setOpen","descriptionElementRef","useRef","useEffect","open","descriptionElement","current","focus","title","fontSize","fontStyle","Dialog","fullWidth","maxWidth","onClose","aria-describedby","DialogTitle","Box","component","height","width","alt","src","image","DialogContent","dividers","DialogContentText","ref","tabIndex","DialogActions","Button","onClick","ItemCard","item","menuItem","n","react","Card","CardMedia","Image","CardContent","Typography","variant","Name","mb","Price","CardActions","size","handleClick","addToCart","Root","styled","_ref","theme","backgroundColor","palette","mode","grey","background","default","StyledBox","_ref2","Puller","_ref3","borderRadius","position","top","left","cart","CssBaseline","emotion_react_browser_esm","styles",".MuiDrawer-root > .MuiPaper-root","bleeding","overflow","SwipeableDrawer","anchor","toggleDrawer","onOpen","swipeAreaWidth","disableSwipeToOpen","ModalProps","keepMounted","borderTopLeftRadius","borderTopRightRadius","visibility","right","p","px","pb","align","map","quantity","reduce","sum","textAlign","selectedItem","setSelectedItem","_React$useState5","_React$useState6","openCart","setOpenCart","handleClickOpen","popup","rating","Rating","ingrediants","Ingrediants","calories","Calories","itemNum","PopupPage","Grid","container","spacing","direction","toConsumableArray","Array","elementInArray","index","xs","Cart","OrderHistoryCard","fakeProps","_useState","_useState2","tip","setTip","priceSum","order","tax","totalPrice","Components_OrderHistoryCard","App","Single","Multi","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","dist","react_router_dist","path","element","MainPage","SummaryPage","Component","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"qGAqCYA,+PAGX,SAHWA,KAAiB,gBAAjBA,EAAiB,cAG5B,CAHWA,MAAiB,KAmB7B,IA8LeC,EA9LF,SAACC,GACZC,QAAQC,IAAIF,GAAO,IAAAG,EACSC,IAAMC,SAAgC,QAAOC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAlEM,EAAMH,EAAA,GAAWI,GAAAJ,EAAA,GACIF,IAAMC,SAAS,KAAGM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAAvCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAAyB,GA2C/Bb,QAAQC,IAAIU,GAERZ,EAAMe,sBACRf,EAAMe,qBAAqBC,QAAQ,SAACC,GAElC,GADAhB,QAAQC,IAAIe,GACiB,WAAzBA,EAAOC,cAA4B,CACrC,IAAMC,EAA6B,GACnCF,EAAOH,QAAQE,QAAQ,SAACI,GACtB,IAAIC,EAAqBC,EAAAC,EAAAC,cAAA,aAAQJ,EAAWK,YACxCC,EAAgBN,EAAWK,WAC3BL,EAAWO,QACbN,EAAQC,EAAAC,EAAAC,cAAA,aAAQJ,EAAWK,WAAU,IAAEH,EAAAC,EAAAC,cAAA,SAAOI,MAAO,CAAEC,WAAY,SAAS,KAAIT,EAAWO,QAC3FD,EAAK,GAAAI,OAAMV,EAAWK,WAAU,MAAAK,OAAKV,EAAWO,QAElDR,EAAYY,KACVT,EAAAC,EAAAC,cAACQ,EAAA,EAAgB,CAACN,MAAOA,EAAOO,QAASX,EAAAC,EAAAC,cAAEU,EAAA,EAAK,MAAKb,MAAOA,EAAOc,IAAKf,EAAWK,gBAGvF,IAAIW,EAAuBnB,EAAOH,QAAQ,GAAGW,WACzCR,EAAOH,QAAQ,GAAGa,QACpBS,EAAY,GAAAN,OAAMb,EAAOH,QAAQ,GAAGW,WAAU,MAAAK,OAAKb,EAAOH,QAAQ,GAAGa,QAEvEb,EAAQiB,KACNT,EAAAC,EAAAC,cAACa,EAAA,EAAW,CACVF,IAAKlB,EAAOI,MACZiB,GAAI,CACFC,aAAc,SAGhBjB,EAAAC,EAAAC,cAACgB,EAAA,EAAS,CAACF,GAAI,CAAEG,MApHR,WAoH+BC,GAAG,6BAA6BpB,EAAAC,EAAAC,cAAA,SAAIP,EAAOI,QACnFC,EAAAC,EAAAC,cAACmB,EAAA,EAAU,CACTC,kBAAgB,4BAChBC,KAAK,sBACLT,aAAcA,EACdU,SAAU,SAACC,GAAC,OA3EG1B,EA2EoBJ,EAAO+B,iBA3EZC,EA2E8BF,OA1EtElC,EAAUN,OAAA2C,EAAA,EAAA3C,CAAA,GAEHK,EAAOL,OAAA4C,EAAA,EAAA5C,CAAA,GACTc,EAAS4B,EAAMG,OAA4B1B,SAJxB,IAACL,EAAe4B,GA4E9BvB,MAAQd,EAAeK,EAAOI,QAE7BF,KAIPL,EAAQiB,KAAKT,EAAAC,EAAAC,cAAA,iBACR,GAA6B,UAAzBP,EAAOC,cAA2B,CAC3C,IAAMC,EAA6B,GACnCF,EAAOH,QAAQE,QAAQ,SAACI,GACtB,IAAIC,EAAqBC,EAAAC,EAAAC,cAAA,aAAQJ,EAAWK,YACxCL,EAAWO,QACbN,EAAQC,EAAAC,EAAAC,cAAA,aAAQJ,EAAWK,WAAU,IAAEH,EAAAC,EAAAC,cAAA,SAAOI,MAAO,CAAEC,WAAY,SAAS,KAAIT,EAAWO,SAE7FR,EAAYY,KACVT,EAAAC,EAAAC,cAACQ,EAAA,EAAgB,CAACC,QAASX,EAAAC,EAAAC,cAAC6B,EAAA,EAAQ,CAACR,KAAMzB,EAAWK,WAAYqB,SAAU,SAACC,GAAC,OAlF3D,SAAC1B,GAAiF,IAAlEM,EAAa2B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGL,EAA0CK,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxGvD,QAAQC,IAAI+C,GACZ,IAAIQ,EAAyC,GAM7C,GAJEA,EADG7C,EAAeS,GACJT,EAAeS,GAEhB,GAEX4B,EAAMG,OAAOM,QACD,IAAV/B,EACF8B,EAAW1B,KAAK,CAAEN,WAAawB,EAAMG,OAA4BP,KAAMlB,MAAOA,IAE9E8B,EAAW1B,KAAK,CAAEN,WAAawB,EAAMG,OAA4BP,WAE9D,CACL,IAAMc,EAAwC,GAC9CF,EAAWzC,QAAQ,SAACU,GACdA,EAAMD,aAAgBwB,EAAMG,OAA4BP,OAC1D5C,QAAQC,IAAI,QACZyD,EAAU5B,KAAKL,MAGnB+B,EAAaE,EAEf9C,EAAUN,OAAA2C,EAAA,EAAA3C,CAAA,GAEHK,EAAOL,OAAA4C,EAAA,EAAA5C,CAAA,GACTc,EAAQoC,KAuD8EG,CAAqB3C,EAAO+B,iBAAkB5B,EAAWO,MAAOoB,MAAQ1B,MAAOA,EAAOc,IAAKf,EAAWK,gBAG7LX,EAAQiB,KACNT,EAAAC,EAAAC,cAACa,EAAA,EAAW,CACVF,IAAKlB,EAAOI,MACZiB,GAAI,CACFC,aAAc,SAGhBjB,EAAAC,EAAAC,cAACgB,EAAA,EAAS,CAACF,GAAI,CAAEG,MAnJR,WAmJ+BC,GAAG,6BAA6BpB,EAAAC,EAAAC,cAAA,SAAIP,EAAOI,QACnFC,EAAAC,EAAAC,cAACqC,EAAA,EAAS,KACP1C,KAIPL,EAAQiB,KAAKT,EAAAC,EAAAC,cAAA,eAKnB,IAAMsC,EAAc,WAClB9D,EAAM+D,SAAQ,IAGVC,EAAwB5D,IAAM6D,OAAoB,MACxD7D,IAAM8D,UAAU,WACd,GAAIlE,EAAMmE,KAAM,KACGC,EAAuBJ,EAAhCK,QACmB,OAAvBD,GACFA,EAAmBE,QAGjBtE,EAAMe,sBACRf,EAAMe,qBAAqBC,QAAQ,SAACC,GAClC,GAA4B,UAAxBA,EAAOC,cAA2B,CACpC,IAAIkB,EAAuBnB,EAAOH,QAAQ,GAAGW,WACzCR,EAAOH,QAAQ,GAAGa,QACpBS,EAAY,GAAAN,OAAMb,EAAOH,QAAQ,GAAGW,WAAU,MAAAK,OAAKb,EAAOH,QAAQ,GAAGa,QAEvEd,EAAUN,OAAA2C,EAAA,EAAA3C,CAAA,GAEHK,EAAOL,OAAA4C,EAAA,EAAA5C,CAAA,GACTU,EAAO+B,iBAAmBZ,UAOtC,CAACpC,EAAMmE,OAEV,IAAMI,EAAQjD,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,SAAOI,MAAO,CAAEa,MA7LhB,UA6LqC+B,SAAU,OAAQC,UAAW,SAAWzE,EAAM6C,MAAavB,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,iBAAAM,OAAY9B,EAAM2B,MAAK,OAEnJ,OACEL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkD,EAAA,EAAM,CACLC,WAAS,EACTC,SAAS,KACTT,KAAMnE,EAAMmE,KACZU,QAASf,EACTrD,OAAQA,EACRmC,kBAAgB,sBAChBkC,mBAAiB,6BAEjBxD,EAAAC,EAAAC,cAACuD,EAAA,EAAW,CAACrC,GAAG,uBAAuB6B,GACvCjD,EAAAC,EAAAC,cAACwD,EAAA,EAAG,CACFC,UAAU,MACV3C,GAAI,CACF4C,OAAQ,QACRC,MAAO,QAETC,IAAKpF,EAAM6C,KACXwC,IAAKrF,EAAMsF,QAEbhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAa,CAACC,SAAqB,UAAX/E,GACvBa,EAAAC,EAAAC,cAACiE,EAAA,EAAiB,CAChB/C,GAAG,4BACHgD,IAAK1B,EACL2B,UAAW,GAEV7E,IAGLQ,EAAAC,EAAAC,cAACoE,EAAA,EAAa,KACZtE,EAAAC,EAAAC,cAACqE,EAAA,EAAM,CAACC,QAAShC,GAAY,UAC7BxC,EAAAC,EAAAC,cAACqE,EAAA,EAAM,CAACC,QAAShC,GAAY,sEC7NxB,SAASiC,EAAS/F,GAE7B,IAAMgG,EAAOC,IAAmBjG,EAAMkG,GAEtC,OADAjG,QAAQC,IAAI8F,GAGRG,EAAA,cAACC,EAAA,EAAI,CAAC9D,GAAI,CAAEsC,SAAU,MAClBuB,EAAA,cAACE,EAAA,EAAS,CACNpB,UAAU,MACVC,OAAO,MACPI,MAAOU,EAAKM,MACZlB,IAAI,eAERe,EAAA,cAACI,EAAA,EAAW,KACRJ,EAAA,cAACK,EAAA,EAAU,CAACC,QAAQ,MACfT,EAAKU,MAEVP,EAAA,cAACK,EAAA,EAAU,CAAClE,GAAI,CAAEqE,GAAI,KAAOlE,MAAM,kBAAgB,KAC5CuD,EAAKY,QAGhBT,EAAA,cAACU,EAAA,EAAW,KACRV,EAAA,cAACN,EAAA,EAAM,CAACiB,KAAK,QAAQhB,QAAS,kBAAI9F,EAAM+G,YAAY/G,EAAMkG,KAAG,eAC7DC,EAAA,cAACN,EAAA,EAAM,CAACiB,KAAK,QAAQhB,QAAS,kBAAI9F,EAAMgH,UAAUhH,EAAMkG,KAAG,qECXrEe,EAAOC,YAAO,MAAPA,CAAc,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,MAAQ,CACvClC,OAAQ,OACRmC,gBACyB,SAAvBD,EAAME,QAAQC,KAAkBC,IAAK,KAAOJ,EAAME,QAAQG,WAAWC,WAGrEC,EAAYT,YAAOlC,IAAPkC,CAAY,SAAAU,GAAQ,MAAQ,CAC9CP,gBAAwC,SADFO,EAALR,MACVE,QAAQC,KAAkB,OAASC,IAAK,QAGzDK,EAASX,YAAOlC,IAAPkC,CAAY,SAAAY,GAAQ,MAAQ,CAC3C3C,MAAO,GACPD,OAAQ,EACRmC,gBAAwC,SAHLS,EAALV,MAGPE,QAAQC,KAAkBC,IAAK,KAAOA,IAAK,KAClEO,aAAc,EACdC,SAAU,WACVC,IAAK,EACLC,KAAM,sBAuFSC,EApFF,SAACnI,GACV,OACIsB,EAAAC,EAAAC,cAACyF,EAAI,KACD3F,EAAAC,EAAAC,cAAC4G,EAAA,EAAW,MACZ9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAM,CACHC,OAAQ,CACRC,mCAAoC,CAChCrD,OAAM,cAAApD,OAAgB9B,EAAMwI,SAAQ,OACpCC,SAAU,cAIlBnH,EAAAC,EAAAC,cAACkH,EAAA,EAAe,CACZC,OAAO,SACPxE,KAAMnE,EAAMmE,KACZU,QAAS7E,EAAM4I,eACfC,OAAQ7I,EAAM4I,eACdE,eAAgB9I,EAAMwI,SACtBO,oBAAoB,EACpBC,WAAY,CACZC,aAAa,IAGb3H,EAAAC,EAAAC,cAACmG,EAAS,CACVrF,GAAI,CACA0F,SAAU,WACVC,KAAMjI,EAAMwI,SACZU,oBAAqB,EACrBC,qBAAsB,EACtBC,WAAY,UACZC,MAAO,EACPnB,KAAM,IAGV5G,EAAAC,EAAAC,cAACqG,EAAM,MACPvG,EAAAC,EAAAC,cAACgF,EAAA,EAAU,CAAClE,GAAI,CAAEgH,EAAG,EAAG7G,MAAO,mBAAmB,SAElDnB,EAAAC,EAAAC,cAACmG,EAAS,CACVrF,GAAI,CACAiH,GAAI,EACJC,GAAI,EACJtE,OAAQ,OACRuD,SAAU,SAGdnH,EAAAC,EAAAC,cAACgF,EAAA,EAAU,CACPiD,MAAM,SACNhD,QAAQ,MAAI,iBAIfzG,EAAMmI,KAAKuB,IAAI,SAAC1D,GACb,OACI1E,EAAAC,EAAAC,cAACgF,EAAA,EAAU,CACPiD,MAAM,UAAQ,SACPzD,EAAKnD,KAAI,4CACPmD,EAAKrE,MAAK,8CACRqE,EAAK2D,YAI5BrI,EAAAC,EAAAC,cAACgF,EAAA,EAAU,CACPiD,MAAM,SACNhD,QAAQ,MAAI,WAEHzG,EAAMmI,KAAKyB,OAAO,SAACC,EAAa7D,GAAe,OACxD6D,EAAO7D,EAAKrE,MAAQqE,EAAK2D,UAAW,IAExCrI,EAAAC,EAAAC,cAACwD,EAAA,EAAG,CAAC8E,UAAU,UACXxI,EAAAC,EAAAC,cAACqE,EAAA,EAAM,CAACY,QAAQ,aAAW,UAI/BnF,EAAAC,EAAAC,cAACwD,EAAA,EAAG,CAAC8E,UAAU,UACXxI,EAAAC,EAAAC,cAACqE,EAAA,EAAM,CAACY,QAAQ,aAAW,iBCrEzC0B,EAAO,CACT,CACAtF,KAAM,QACNlB,MAAO,GACPgI,SAAU,EACV7I,QAAS,IAET,CACA+B,KAAM,WACNlB,MAAO,IACPgI,SAAU,IAEV,CACA9G,KAAM,OACNlB,MAAO,GACPgI,SAAU,KAEV,CACA9G,KAAM,cACNlB,MAAO,EACPgI,SAAU,IA+EC5J,EA3EF,WAAM,IAAAI,EACSC,IAAMC,UAAS,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAtCgE,EAAI7D,EAAA,GAAEyD,EAAOzD,EAAA,GAAAI,EACoBN,IAAMC,SAAS,IAAiBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAAjEqJ,EAAYpJ,EAAA,GAAEqJ,EAAerJ,EAAA,GAAAsJ,EACJ7J,IAAMC,UAAS,GAAM6J,EAAA3J,OAAAC,EAAA,EAAAD,CAAA0J,EAAA,GAA9CE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBtB,EAAe,WAAH,OAAS,WACvBwB,GAAaD,KAKXE,EAAkB,SAACnE,GACrBnC,GAAQ,GACR9D,QAAQC,IAAI+F,IAAmBC,GAAGnF,sBAClC,IAAMuJ,EAAoB,CACtBnG,MAAM,EACNJ,QAASA,EAETlB,KAAMoD,IAAmBC,GAAGQ,KAC5B/E,MAAOsE,IAAmBC,GAAGU,MAC7BtB,MAAOW,IAAmBC,GAAGI,MAC7BiE,OAAQtE,IAAmBC,GAAGsE,OAC9BC,YAAaxE,IAAmBC,GAAGwE,YACnCC,SAAU1E,IAAmBC,GAAG0E,SAChC7J,qBAAsBkF,IAAmBC,GAAGnF,sBAiBhDiJ,EAAgBM,IAGdtD,EAAY,aAGZ6D,EAAU5E,IAAmB1C,OAGnC,OACIjC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqE,EAAA,EAAM,CAACC,QAAS,kBAAMuE,EAAgB,KAAG,gBAC1C/I,EAAAC,EAAAC,cAACqE,EAAA,EAAM,CAACC,QAAS8C,KAAe,QAC/BzE,EAAO7C,EAAAC,EAAAC,cAACsJ,EAAUf,GAAmB,KACtCzI,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,mCAIAF,EAAAC,EAAAC,cAACuJ,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,UAAU,OAEjC3K,OAAA4K,EAAA,EAAA5K,CAAI6K,MAAMP,IAAUnB,IAAI,SAAC2B,EAAgBC,GAAK,OAC3ChK,EAAAC,EAAAC,cAACuJ,EAAA,EAAI,CAAC/E,MAAI,EAACuF,GAAI,GACXjK,EAAAC,EAAAC,cAACuE,EAAQ,CAACG,EAAGoF,EAAOvE,YAAasD,EAAiBrD,UAAWA,QAMzE1F,EAAAC,EAAAC,cAACgK,EAAI,CAACrD,KAAMA,EAAMK,SAAU,GAAIrE,KAAMgG,EAAUvB,aAAcA,MCzI3D6C,EATU,SAAHtE,GAAgD,IAA3CtE,EAAIsE,EAAJtE,KAAMlB,EAAKwF,EAALxF,MAAOgI,EAAQxC,EAARwC,SAAiBxC,EAAPrG,QAEhD,OACEQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iBAASqB,EAAI,cAAalB,EAAK,iBAAgBgI,EAAQ,uBCezD+B,GAAsB,CACzB,CACG7I,KAAM,SACNlB,MAAO,EACPgI,SAAU,EACV7I,QAAS,IAEZ,CACG+B,KAAM,QACNlB,MAAO,GACPgI,SAAU,EACV7I,QAAS,IAEZ,CACG+B,KAAM,QACNlB,MAAO,GACPgI,SAAU,EACV7I,QAAS,KA6CAf,GArCF,WAAM,IAAA4L,EACMtL,mBAAS,KAAKuL,EAAArL,OAAAC,EAAA,EAAAD,CAAAoL,EAAA,GAA7BE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GACZG,EAAWL,GAAU9B,OAAO,SAACC,EAAKmC,GAAK,OAAKnC,EAAOmC,EAAMrK,MAAQqK,EAAMrC,UAAW,GAClFsC,EAAkB,IAAXF,EACPG,EAAaH,EAAWE,EAAOF,EAAWF,EAE/C,OACGvK,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,2BACCkK,GAAUhC,IAAI,SAACsC,GACd,OACG1K,EAAAC,EAAAC,cAAC2K,EAAgB,CACdtJ,KAAMmJ,EAAMnJ,KACZlB,MAAOqK,EAAMrK,MACbgI,SAAUqC,EAAMrC,SAChB7I,QAASkL,EAAMlL,YAKvBQ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,oBAAYuK,GACZzK,EAAAC,EAAAC,cAAA,kBAAUyK,GACV3K,EAAAC,EAAAC,cAAA,UAAQsE,QAAS,kBAAMgG,EAAO,KAAG,MACjCxK,EAAAC,EAAAC,cAAA,UAAQsE,QAAS,kBAAMgG,EAAO,OAAM,OACpCxK,EAAAC,EAAAC,cAAA,UAAQsE,QAAS,kBAAMgG,EAAO,MAAM,OACpCxK,EAAAC,EAAAC,cAAA,kBAAUqK,EAAME,EAAQ,KAAIF,EAAG,KAC/BvK,EAAAC,EAAAC,cAAA,oBAAY0K,GAEZ5K,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,sCCQK4K,IA7EItM,EAAkBuM,OAkBlBvM,EAAkBwM,MA0C5B,SAAAC,GAAA,SAAAH,IAAA,OAAA7L,OAAAiM,EAAA,EAAAjM,CAAAkM,KAAAL,GAAA7L,OAAAmM,EAAA,EAAAnM,CAAAkM,KAAAlM,OAAAoM,EAAA,EAAApM,CAAA6L,GAAAQ,MAAAH,KAAAnJ,YAcN,OAdM/C,OAAAsM,EAAA,EAAAtM,CAAA6L,EAAAG,GAAAhM,OAAAuM,EAAA,EAAAvM,CAAA6L,EAAA,EAAAjK,IAAA,SAAAT,MAAA,WAEL,OACEJ,EAAAC,EAAAC,cAACuL,EAAA,EAAU,KACTzL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwL,EAAA,EAAM,KACL1L,EAAAC,EAAAC,cAACwL,EAAA,EAAK,CAACC,KAAK,IAAIC,QAAS5L,EAAAC,EAAAC,cAAC2L,EAAI,QAE9B7L,EAAAC,EAAAC,cAACwL,EAAA,EAAK,CAACC,KAAK,WAAWC,QAAS5L,EAAAC,EAAAC,cAAC4L,GAAO,eAMjDhB,EAdM,CAASiB,cChELC,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACHpM,EAAAC,EAAAC,cAACF,EAAAC,EAAMoM,WAAU,KACfrM,EAAAC,EAAAC,cAACoM,GAAG","file":"static/js/main.d3b3c83f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl, { formControlClasses } from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Box from '@mui/material/Box';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nconst primaryColor = '#1976d2'\r\n\r\nexport interface popupProps {\r\n  open: boolean,\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  rating: number;\r\n  ingrediants?: string[];\r\n  calories: number;\r\n  customizationOptions?: custimizationOptionProps[];\r\n}\r\n\r\nexport interface custimizationOptionProps {\r\n  componentType: string;  //USE \"Single\" or \"Multi\" in json data file\r\n  label: string;\r\n  summaryViewLabel: string;\r\n  options: custimizationOptionsList[]\r\n}\r\n\r\nexport enum customizationType {\r\n  Single = \"Single\",\r\n  Multi = \"Multi\"\r\n}\r\n\r\nexport interface custimizationOptionsList {\r\n  optionName: string,\r\n  price?: number\r\n}\r\n\r\ninterface options {\r\n  subheaderlist: []\r\n}\r\n\r\ninterface subheader {\r\n  subheadername: string;\r\n  subheaderelements: string[];\r\n}\r\n\r\nconst page = (props: popupProps) => {\r\n  console.log(props);\r\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('body');\r\n  const [values, setValues] = React.useState({});\r\n  const options: JSX.Element[] = [];\r\n\r\n  const handleRadioChange = (label: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValues(\r\n      {\r\n        ...values,\r\n        [label]: (event.target as HTMLInputElement).value\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleCheckboxChange = (label: string, price: number = 0, event: React.ChangeEvent<HTMLInputElement>) => {\r\n    console.log(event);\r\n    let tempValues: custimizationOptionsList[] = []\r\n    if ((values as any)[label]) {\r\n      tempValues = (values as any)[label];\r\n    } else {\r\n      tempValues = [];\r\n    }\r\n    if (event.target.checked) {\r\n      if (price !== 0) {\r\n        tempValues.push({ optionName: (event.target as HTMLInputElement).name, price: price });\r\n      } else {\r\n        tempValues.push({ optionName: (event.target as HTMLInputElement).name });\r\n      }\r\n    } else {\r\n      const newValues: custimizationOptionsList[] = [];\r\n      tempValues.forEach((value) => {\r\n        if (value.optionName !== (event.target as HTMLInputElement).name) {\r\n          console.log('test');\r\n          newValues.push(value);\r\n        }\r\n      })\r\n      tempValues = newValues;\r\n    }\r\n    setValues(\r\n      {\r\n        ...values,\r\n        [label]: tempValues,\r\n      }\r\n    );\r\n  };\r\n\r\n  console.log(values);\r\n\r\n  if (props.customizationOptions) {\r\n    props.customizationOptions.forEach((option) => {\r\n      console.log(option);\r\n      if (option.componentType === 'Single') {\r\n        const listOptions: JSX.Element[] = [];\r\n        option.options.forEach((listOption) => {\r\n          let label: JSX.Element = <label>{listOption.optionName}</label>;\r\n          let value: string = listOption.optionName;\r\n          if (listOption.price) {\r\n            label = <label>{listOption.optionName} <label style={{ marginLeft: '2rem' }}>+${listOption.price}</label></label>;\r\n            value = `${listOption.optionName}--${listOption.price}`\r\n          }\r\n          listOptions.push(\r\n            <FormControlLabel value={value} control={< Radio />} label={label} key={listOption.optionName} />\r\n          );\r\n        });\r\n        let defaultValue: string = option.options[0].optionName;\r\n        if (option.options[0].price) {\r\n          defaultValue = `${option.options[0].optionName}--${option.options[0].price}`\r\n        }\r\n        options.push(\r\n          <FormControl\r\n            key={option.label}\r\n            sx={{\r\n              marginBottom: '2rem',\r\n            }}\r\n          >\r\n            <FormLabel sx={{ color: primaryColor }} id=\"radio-buttons-group-label\">{<b>{option.label}</b>}</FormLabel>\r\n            <RadioGroup\r\n              aria-labelledby=\"radio-buttons-group-label\"\r\n              name=\"radio-buttons-group\"\r\n              defaultValue={defaultValue}\r\n              onChange={(e) => handleRadioChange(option.summaryViewLabel, e)}\r\n              value={(values as any)[option.label]}\r\n            >\r\n              {listOptions}\r\n            </RadioGroup>\r\n          </FormControl>\r\n        );\r\n        options.push(<br></br>);\r\n      } else if (option.componentType === 'Multi') {\r\n        const listOptions: JSX.Element[] = [];\r\n        option.options.forEach((listOption) => {\r\n          let label: JSX.Element = <label>{listOption.optionName}</label>;\r\n          if (listOption.price) {\r\n            label = <label>{listOption.optionName} <label style={{ marginLeft: '2rem' }}>+${listOption.price}</label></label>;\r\n          }\r\n          listOptions.push(\r\n            <FormControlLabel control={<Checkbox name={listOption.optionName} onChange={(e) => handleCheckboxChange(option.summaryViewLabel, listOption.price, e)} />} label={label} key={listOption.optionName} />\r\n          );\r\n        });\r\n        options.push(\r\n          <FormControl\r\n            key={option.label}\r\n            sx={{\r\n              marginBottom: '2rem',\r\n            }}\r\n          >\r\n            <FormLabel sx={{ color: primaryColor }} id=\"radio-buttons-group-label\">{<b>{option.label}</b>}</FormLabel>\r\n            <FormGroup>\r\n              {listOptions}\r\n            </FormGroup>\r\n          </FormControl >\r\n        );\r\n        options.push(<br></br>);\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (props.open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n\r\n      if (props.customizationOptions) {\r\n        props.customizationOptions.forEach((option) => {\r\n          if (option.componentType == 'Single') {\r\n            let defaultValue: string = option.options[0].optionName;\r\n            if (option.options[0].price) {\r\n              defaultValue = `${option.options[0].optionName}--${option.options[0].price}`\r\n            }\r\n            setValues(\r\n              {\r\n                ...values,\r\n                [option.summaryViewLabel]: defaultValue,\r\n              }\r\n            );\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }, [props.open]);\r\n\r\n  const title = <div><label style={{ color: primaryColor, fontSize: \"2rem\", fontStyle: \"bold\" }}>{props.name}</label><br></br><label>{`$${props.price} `}</label></div>;\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">{title}</DialogTitle>\r\n        <Box\r\n          component=\"img\"\r\n          sx={{\r\n            height: '20rem',\r\n            width: '100%',\r\n          }}\r\n          alt={props.name}\r\n          src={props.image}\r\n        />\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n            {options}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleClose}>Subscribe</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default page;","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport * as menuItem from './../data/menuData.json';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\ntype Props = {\r\n    n: number;\r\n    handleClick: (i:number) => void;\r\n    addToCart: (i:number) => void;\r\n\r\n}\r\n\r\nexport default function ItemCard(props: Props) {\r\n\r\n    const item = menuItem.menuItems[props.n];\r\n    console.log(item)\r\n    return (\r\n\r\n        <Card sx={{ maxWidth: 275 }}>\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"150\"\r\n                image={item.Image}\r\n                alt=\"dish image\"\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"h5\">\r\n                    {item.Name}\r\n                </Typography>\r\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                    $ {item.Price}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button size=\"small\" onClick={()=>props.handleClick(props.n)}>See Details</Button>\r\n                <Button size=\"small\" onClick={()=>props.addToCart(props.n)}>Order Now</Button>\r\n\r\n            </CardActions>\r\n        </Card>\r\n       \r\n    );\r\n}","import React from 'react';\r\nimport { Global } from '@emotion/react';\r\nimport { styled } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { grey } from '@mui/material/colors';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Typography from '@mui/material/Typography';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\n\r\nexport interface cartProps {\r\n    cart: itemProps[],\r\n    bleeding: number,\r\n    open: boolean,\r\n    toggleDrawer: any,\r\n}\r\n\r\nexport interface itemProps {\r\n    name: string;\r\n    price: number;\r\n    quantity: number;\r\n    options?: optionsProps[];\r\n}\r\n\r\nexport interface optionsProps {\r\n    name: string;\r\n    price?: number;\r\n}\r\n\r\nconst Root = styled('div')(({ theme }) => ({\r\n    height: '100%',\r\n    backgroundColor:\r\n      theme.palette.mode === 'dark' ? grey[100] : theme.palette.background.default,\r\n}));\r\n\r\nconst StyledBox = styled(Box)(({ theme }) => ({\r\nbackgroundColor: theme.palette.mode === 'dark' ? '#fff' : grey[800],\r\n}));\r\n\r\nconst Puller = styled(Box)(({ theme }) => ({\r\nwidth: 30,\r\nheight: 6,\r\nbackgroundColor: theme.palette.mode === 'dark' ? grey[300] : grey[900],\r\nborderRadius: 3,\r\nposition: 'absolute',\r\ntop: 8,\r\nleft: 'calc(50% - 15px)',\r\n}));\r\n\r\nconst cart = (props: cartProps) => {\r\n    return (\r\n        <Root>\r\n            <CssBaseline />\r\n            <Global\r\n                styles={{\r\n                '.MuiDrawer-root > .MuiPaper-root': {\r\n                    height: `calc(50% - ${props.bleeding}px)`,\r\n                    overflow: 'visible',\r\n                },\r\n                }}\r\n            />\r\n            <SwipeableDrawer\r\n                anchor=\"bottom\"\r\n                open={props.open}\r\n                onClose={props.toggleDrawer()}\r\n                onOpen={props.toggleDrawer()}\r\n                swipeAreaWidth={props.bleeding}\r\n                disableSwipeToOpen={false}\r\n                ModalProps={{\r\n                keepMounted: true,\r\n                }}\r\n            >\r\n                <StyledBox\r\n                sx={{\r\n                    position: 'absolute',\r\n                    top: -props.bleeding,\r\n                    borderTopLeftRadius: 8,\r\n                    borderTopRightRadius: 8,\r\n                    visibility: 'visible',\r\n                    right: 0,\r\n                    left: 0,\r\n                }}\r\n                >\r\n                <Puller />\r\n                <Typography sx={{ p: 2, color: 'text.secondary' }}>Cart</Typography>\r\n                </StyledBox>\r\n                <StyledBox\r\n                sx={{\r\n                    px: 2,\r\n                    pb: 2,\r\n                    height: '100%',\r\n                    overflow: 'auto',\r\n                }}\r\n                >\r\n                <Typography\r\n                    align='center'\r\n                    variant='h2'\r\n                    >\r\n                    Shopping Cart\r\n                </Typography>\r\n                {props.cart.map((item : itemProps) => {\r\n                    return(\r\n                        <Typography\r\n                            align='center'>\r\n                            name: {item.name}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            price: ${item.price}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            quantity: {item.quantity}\r\n                        </Typography>\r\n                    )\r\n                })}\r\n                <Typography\r\n                    align='center'\r\n                    variant='h6'\r\n                    >\r\n                    Total: ${props.cart.reduce((sum: number, item: itemProps) => \r\n                    sum + (item.price * item.quantity), 0)}\r\n                </Typography>\r\n                <Box textAlign='center'>\r\n                    <Button variant='contained'>\r\n                        Order\r\n                    </Button>\r\n                </Box>\r\n                <Box textAlign='center'>\r\n                    <Button variant='contained'>\r\n                        Pay Bill\r\n                    </Button>\r\n                </Box>\r\n                </StyledBox>\r\n            </SwipeableDrawer>\r\n        </Root>\r\n    );\r\n}\r\n\r\nexport default cart;","import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Popup, { custimizationOptionProps, custimizationOptionsList, customizationType, popupProps } from './PopupPage';\r\nimport ItemCard from \"../Components/MenuItemCard\";\r\nimport * as menuItem from './../data/menuData.json';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Cart, { itemProps, optionsProps } from \"../Components/Cart\";\r\n\r\nconst customizationOptions: custimizationOptionProps[] = [\r\n    {\r\n        componentType: 'Single',\r\n        label: \"Select Cheese\",\r\n        summaryViewLabel: \"Cheese\",\r\n        options: [\r\n            {\r\n                optionName: \"Mozerella\"\r\n            } as custimizationOptionsList\r\n            ,\r\n            {\r\n                optionName: \"Cheddar\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Special Cheese\",\r\n                price: 2.99\r\n            } as custimizationOptionsList\r\n        ] as custimizationOptionsList[]\r\n    },\r\n    {\r\n        componentType: 'Multi',\r\n        label: \"Select Toppings\",\r\n        summaryViewLabel: \"Toppings\",\r\n        options: [\r\n            {\r\n                optionName: \"Bacon\",\r\n                price: 1.99\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Pepporoni\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Mushrooms\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Green Peppers\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Onions\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Yellow Peppers\"\r\n            } as custimizationOptionsList\r\n        ]\r\n    }\r\n]\r\n\r\nconst cart = [\r\n    {\r\n    name: \"pizza\",\r\n    price: 10,\r\n    quantity: 2,\r\n    options: [] as optionsProps[]\r\n    } as itemProps,\r\n    {\r\n    name: \"cat food\",\r\n    price: 100,\r\n    quantity: 30\r\n    } as itemProps,\r\n    {\r\n    name: \"food\",\r\n    price: 69,\r\n    quantity: 420\r\n    } as itemProps,\r\n    {\r\n    name: \"edible food\",\r\n    price: 0,\r\n    quantity: 0\r\n    } as itemProps\r\n]\r\n\r\nconst page = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedItem, setSelectedItem] = React.useState({} as popupProps);\r\n    const [openCart, setOpenCart] = React.useState(false);\r\n\r\n    const toggleDrawer = () => () => {\r\n        setOpenCart(!openCart);\r\n    };\r\n    // Need to add this function to onClick of all menu cards and pass the card values to setSelectedItem.\r\n    // Card values should be of type popupProps and each menu card should have these values created\r\n\r\n    const handleClickOpen = (n: number) => {\r\n        setOpen(true);\r\n        console.log(menuItem.menuItems[n].customizationOptions)\r\n        const popup: popupProps = {\r\n            open: true,\r\n            setOpen: setOpen,\r\n\r\n            name: menuItem.menuItems[n].Name,\r\n            price: menuItem.menuItems[n].Price,\r\n            image: menuItem.menuItems[n].Image,\r\n            rating: menuItem.menuItems[n].Rating,\r\n            ingrediants: menuItem.menuItems[n].Ingrediants,\r\n            calories: menuItem.menuItems[n].Calories,\r\n            customizationOptions: menuItem.menuItems[n].customizationOptions,\r\n            // customizationOptions: customizationOptions\r\n            // open: true,\r\n            // setOpen: setOpen,\r\n            // name: \"Pizza\",\r\n            // price: 8.99,\r\n            // image: \"/images/pizza.jpg\",\r\n            // rating: 4,\r\n            // ingrediants: [\r\n            //     \"Cheese\",\r\n            //     \"Dough\",\r\n            //     \"Tomato Sauce\"\r\n            // ],\r\n            // calories: 500,\r\n\r\n            //TODO: other customization options, now it is always pizza\r\n        }\r\n        setSelectedItem(popup);\r\n    };\r\n\r\n    const addToCart = () => {\r\n        // transfer the data\r\n    };\r\n    const itemNum = menuItem.menuItems.length;\r\n\r\n    //Button can be removed but need to add an onClick function to all the menu cards, keep the line to render the popup as well\r\n    return (\r\n        <div>\r\n            <Button onClick={() => handleClickOpen(1)}>scroll=paper</Button>\r\n            <Button onClick={toggleDrawer()}>Open</Button>\r\n            {open ? <Popup {...selectedItem} /> : null}\r\n            <h1>Menu</h1>\r\n            <p>Menu page body content</p>\r\n\r\n            {/* this part doesnt work idk why, it should display multiple items on same row */}\r\n            {/* i try grid and row/col they all dont work */}\r\n            <Grid container spacing={2} direction='row'>\r\n                {/* <Grid item md={3}> */}\r\n                {[...Array(itemNum)].map((elementInArray, index) => (\r\n                    <Grid item xs={3}>\r\n                        <ItemCard n={index} handleClick={handleClickOpen} addToCart={addToCart} />\r\n                    </Grid>\r\n                )\r\n                )}\r\n\r\n            </Grid>\r\n            <Cart cart={cart} bleeding={56} open={openCart} toggleDrawer={toggleDrawer}/>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default page;","import React from 'react'\r\nimport { order } from '../Pages/SummaryPage';\r\n\r\nconst OrderHistoryCard = ({name, price, quantity, options}: order) => {\r\n    // console.log(name)\r\n  return (\r\n    <div>\r\n        <p>name:{name} --- price:{price} --- quantity:{quantity} -- options: TODO</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderHistoryCard","import { render } from '@testing-library/react';\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react'; \r\nimport OrderHistoryCard from '../Components/OrderHistoryCard';\r\n\r\n\r\n// faking props data \r\nexport interface orderHistoryProps {\r\n   jsonobjects: order[];\r\n}\r\n\r\nexport interface order {\r\n   name: string;\r\n   price: number;\r\n   quantity: number;\r\n   options?: optionsProps;\r\n}\r\n\r\nexport interface optionsProps {\r\n\r\n}\r\n\r\nconst fakeProps : order[] = [\r\n   {\r\n      name: \"burger\",\r\n      price: 8, \r\n      quantity: 1,\r\n      options: []\r\n   },\r\n   {\r\n      name: \"pizza\",\r\n      price: 14, \r\n      quantity: 2,\r\n      options: []\r\n   },\r\n   {\r\n      name: \"pasta\",\r\n      price: 10, \r\n      quantity: 5,\r\n      options: []\r\n   },\r\n]\r\n\r\n\r\n\r\n\r\n// summary page component\r\nconst page = () => {\r\n   const [tip, setTip] = useState(0.13)\r\n   const priceSum = fakeProps.reduce((sum, order) => sum + (order.price * order.quantity), 0)\r\n   const tax = (priceSum * 0.13)\r\n   const totalPrice = priceSum + tax + (priceSum * tip)\r\n\r\n    return (\r\n       <div>\r\n          <h1>Summary</h1>\r\n          <h2>Order History</h2>\r\n          {fakeProps.map((order) => {\r\n            return (\r\n               <OrderHistoryCard\r\n                  name={order.name}\r\n                  price={order.price}\r\n                  quantity={order.quantity}\r\n                  options={order.options}\r\n               />\r\n            )\r\n          })}\r\n\r\n          <h2>Total Price</h2>\r\n          <p>Price: ${priceSum}</p>\r\n          <p>Tax: ${tax}</p>\r\n          <button onClick={() => setTip(0)}>0%</button>\r\n          <button onClick={() => setTip(0.13)}>13%</button>\r\n          <button onClick={() => setTip(0.20)}>20%</button>\r\n          <p>Tip: ${tip * priceSum} ({tip})</p>\r\n          <p>Total: ${totalPrice}</p>\r\n\r\n          <button>Call Service</button>\r\n          <button>Proceed to Payment</button>\r\n\r\n       </div>\r\n    );\r\n}\r\n \r\nexport default page;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport Menu from './Pages/MainPage';\r\nimport Popup, { custimizationOptionProps, custimizationOptionsList, customizationType, popupProps } from './Pages/PopupPage';\r\nimport Summary from './Pages/SummaryPage';\r\nimport Cart, { cartProps, itemProps, optionsProps } from './Components/Cart'\r\n\r\nconst customizationOptions: custimizationOptionProps[] = [\r\n  {\r\n    componentType: customizationType.Single,\r\n    label: \"Select Cheese\",\r\n    summaryViewLabel: \"Cheese\",\r\n    options: [\r\n      {\r\n        optionName: \"Mozerella\"\r\n      } as custimizationOptionsList\r\n      ,\r\n      {\r\n        optionName: \"Cheddar\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Special Cheese\",\r\n        price: 2.99\r\n      } as custimizationOptionsList\r\n    ] as custimizationOptionsList[]\r\n  },\r\n  {\r\n    componentType: customizationType.Multi,\r\n    label: \"Select Toppings\",\r\n    summaryViewLabel: \"Toppings\",\r\n    options: [\r\n      {\r\n        optionName: \"Bacon\",\r\n        price: 1.99\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Pepporoni\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Mushrooms\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Green Peppers\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Onions\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Yellow Peppers\"\r\n      } as custimizationOptionsList\r\n    ]\r\n  }\r\n]\r\n\r\n// const popup: popupProps = {\r\n//   setOpen: setSelectedItem,\r\n//   name: \"Pizza\",\r\n//   price: 8.99,\r\n//   image: \"/images/pizza.jpg\",\r\n//   rating: 4,\r\n//   ingrediants: [\r\n//     \"Cheese\",\r\n//     \"Dough\",\r\n//     \"Tomato Sauce\"\r\n//   ],\r\n//   calories: 500,\r\n//   customizationOptions: customizationOptions,\r\n// }\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Menu />} />\r\n            {/* <Route path=\"/popup\" element={<Popup {...popup} />} /> */}\r\n            <Route path=\"/summary\" element={<Summary />} />\r\n            {/* <Route path=\"/cart\" element={<Cart {...cart} />} /> */}\r\n          </Routes>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}