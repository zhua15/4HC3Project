{"version":3,"sources":["Pages/PopupPage.tsx","Components/QuantitySelector.tsx","Components/MenuItemCard.tsx","Components/Cart.tsx","Pages/MainPage.tsx","Pages/SummaryPage.tsx","App.tsx","index.tsx"],"names":["customizationType","QuantitySelector","props","handlePlus","quantity","setQuantity","handleMinus","popup","react_default","a","createElement","onClick","e","style","paddingLeft","display","paddingRight","IconButton","aria-label","size","Remove_default","sx","color","fontSize","Add_default","event","stopPropagation","preventDefault","page","_React$useState","React","useState","_React$useState2","Object","slicedToArray","scroll","_React$useState3","_React$useState4","values","setValues","_React$useState5","_React$useState6","_React$useState7","_React$useState8","openTable","setOpenTable","_React$useState9","_React$useState10","options","customizationOptions","forEach","option","componentType","listOptions","listOption","label","optionName","value","price","marginLeft","concat","push","FormControlLabel","control","Radio","key","defaultValue","FormControl","marginBottom","FormLabel","id","RadioGroup","aria-labelledby","name","onChange","summaryViewLabel","objectSpread","defineProperty","target","Checkbox","arguments","length","undefined","tempValues","checked","newValues","handleCheckboxChange","FormGroup","Components_QuantitySelector","handleClose","setOpen","descriptionElementRef","useRef","useEffect","open","descriptionElement","current","focus","title","fontStyle","Rating","rating","readOnly","calories","Dialog","fullWidth","maxWidth","onClose","aria-describedby","DialogTitle","Box","component","height","width","alt","src","image","DialogContent","dividers","ingrediants","TableContainer","marginTop","Paper","Table","TableHead","TableRow","TableCell","KeyboardArrowUp_default","KeyboardArrowDown_default","Collapse","in","timeout","unmountOnExit","TableBody","map","item","DialogContentText","ref","tabIndex","DialogActions","Button","tempItem","tempData","console","log","Array","isArray","tempName","split","tempPrice","parseInt","setCart","toConsumableArray","cart","ItemCard","shadow","setShadow","react","Card","boxShadow","cursor","backgroundColor","handleClick","onMouseOver","onMouseOut","CardMedia","Image","CardContent","Typography","fontWeight","variant","Name","mb","Price","CardActions","marginRight","onMouseDown","addToCart","Root","styled","_ref","theme","palette","mode","grey","background","default","StyledBox","_ref2","_ref3","borderRadius","position","top","left","navigate","useNavigate","handleDelete","index","indexOf","temp","splice","Row","getOptionsubtotal","optionPrice","Fragment","& > *","borderBottom","Delete_default","scope","align","toFixed","paddingBottom","paddingTop","colSpan","ml","mr","CssBaseline","emotion_react_browser_esm","styles",".MuiDrawer-root > .MuiPaper-root","bleeding","overflow","SwipeableDrawer","anchor","toggleDrawer","onOpen","swipeAreaWidth","disableSwipeToOpen","ModalProps","keepMounted","px","pb","minWidth","reduce","sum","optionSum","optionItem","textAlign","setHistory","TabPanel","children","other","objectWithoutProperties","assign","role","hidden","Box_Box","p","selectedItem","setSelectedItem","openCart","setOpenCart","mains","setMains","_React$useState11","_React$useState12","Snacks","setSnacks","_React$useState13","_React$useState14","desserts","setDesserts","_React$useState15","_React$useState16","drinks","setDrinks","document","body","handleClickOpen","Ingrediants","Calories","menuItem","a11yProps","aria-controls","tempMains","tempSnacks","tempDesserts","tempDrinks","itemCard","Grid","xs","Tab","_React$useState17","_React$useState18","setValue","m","borderColor","justifyContent","alignItems","Tabs","newValue","ShoppingCart","container","spacing","direction","PopupPage","Cart","orderHistoryProps","summary","_useState","_useState2","tip","setTip","subtotal","order","itemPrice","getSubtotalPrice","tax","totalPrice","mx","my","ButtonGroup","App","Single","Multi","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","dist","react_router_dist","path","element","MainPage","SummaryPage","Component","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b3969d6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog, { DialogProps } from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Box from '@mui/material/Box';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport { itemProps, optionsProps } from '../Components/Cart';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport Rating from '@mui/material/Rating';\r\nimport QuantitySelector from '../Components/QuantitySelector';\r\n\r\nconst primaryColor = '#1976d2'\r\n\r\nexport interface popupProps {\r\n  open: boolean\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>\r\n  setCart: any\r\n  cart: any,\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  rating: number;\r\n  ingrediants?: string[];\r\n  calories: number;\r\n  customizationOptions?: custimizationOptionProps[];\r\n}\r\n\r\nexport interface custimizationOptionProps {\r\n  componentType: string;  //USE \"Single\" or \"Multi\" in json data file\r\n  label: string;\r\n  summaryViewLabel: string;\r\n  options: custimizationOptionsList[]\r\n}\r\n\r\nexport enum customizationType {\r\n  Single = \"Single\",\r\n  Multi = \"Multi\"\r\n}\r\n\r\nexport interface custimizationOptionsList {\r\n  optionName: string,\r\n  price?: number\r\n}\r\n\r\ninterface options {\r\n  subheaderlist: []\r\n}\r\n\r\ninterface subheader {\r\n  subheadername: string;\r\n  subheaderelements: string[];\r\n}\r\n\r\nconst page = (props: popupProps) => {\r\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('body');\r\n  const [values, setValues] = React.useState({} as any);\r\n  const [ingrediantsTableRows, setIngrediantsTableRows] = React.useState([] as JSX.Element[]);\r\n  const [openTable, setOpenTable] = React.useState(false);\r\n  const [quantity, setQuantity] = React.useState(1);\r\n\r\n  const options: JSX.Element[] = [];\r\n\r\n  const handleRadioChange = (label: string, event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValues(\r\n      {\r\n        ...values,\r\n        [label]: (event.target as HTMLInputElement).value\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleCheckboxChange = (label: string, price: number = 0, event: React.ChangeEvent<HTMLInputElement>) => {\r\n    let tempValues: custimizationOptionsList[] = []\r\n    if ((values as any)[label]) {\r\n      tempValues = (values as any)[label];\r\n    } else {\r\n      tempValues = [];\r\n    }\r\n    if (event.target.checked) {\r\n      if (price !== 0) {\r\n        tempValues.push({ optionName: (event.target as HTMLInputElement).name, price: price });\r\n      } else {\r\n        tempValues.push({ optionName: (event.target as HTMLInputElement).name });\r\n      }\r\n    } else {\r\n      const newValues: custimizationOptionsList[] = [];\r\n      tempValues.forEach((value) => {\r\n        if (value.optionName !== (event.target as HTMLInputElement).name) {\r\n          newValues.push(value);\r\n        }\r\n      })\r\n      tempValues = newValues;\r\n    }\r\n    setValues(\r\n      {\r\n        ...values,\r\n        [label]: tempValues,\r\n      }\r\n    );\r\n  };\r\n\r\n  if (props.customizationOptions) {\r\n    props.customizationOptions.forEach((option) => {\r\n      if (option.componentType === 'Single') {\r\n        const listOptions: JSX.Element[] = [];\r\n        option.options.forEach((listOption) => {\r\n          let label: JSX.Element = <label>{listOption.optionName}</label>;\r\n          let value: string = listOption.optionName;\r\n          if (listOption.price) {\r\n            label = <label>{listOption.optionName} <label style={{ marginLeft: '2rem' }}>+${listOption.price}</label></label>;\r\n            value = `${listOption.optionName}--${listOption.price}`\r\n          }\r\n          listOptions.push(\r\n            <FormControlLabel value={value} control={< Radio />} label={label} key={listOption.optionName} />\r\n          );\r\n        });\r\n        let defaultValue: string = option.options[0].optionName;\r\n        if (option.options[0].price) {\r\n          defaultValue = `${option.options[0].optionName}--${option.options[0].price}`\r\n        }\r\n        options.push(\r\n          <FormControl\r\n            key={option.label}\r\n            sx={{\r\n              marginBottom: '2rem',\r\n            }}\r\n          >\r\n            <FormLabel sx={{ color: primaryColor }} id=\"radio-buttons-group-label\">{<b>{option.label}</b>}</FormLabel>\r\n            <RadioGroup\r\n              aria-labelledby=\"radio-buttons-group-label\"\r\n              name=\"radio-buttons-group\"\r\n              defaultValue={defaultValue}\r\n              onChange={(e) => handleRadioChange(option.summaryViewLabel, e)}\r\n              value={(values as any)[option.label]}\r\n            >\r\n              {listOptions}\r\n            </RadioGroup>\r\n          </FormControl>\r\n        );\r\n        options.push(<br></br>);\r\n      } else if (option.componentType === 'Multi') {\r\n        const listOptions: JSX.Element[] = [];\r\n        option.options.forEach((listOption) => {\r\n          let label: JSX.Element = <label>{listOption.optionName}</label>;\r\n          if (listOption.price) {\r\n            label = <label>{listOption.optionName} <label style={{ marginLeft: '2rem' }}>+${listOption.price}</label></label>;\r\n          }\r\n          listOptions.push(\r\n            <FormControlLabel control={<Checkbox name={listOption.optionName} onChange={(e) => handleCheckboxChange(option.summaryViewLabel, listOption.price, e)} />} label={label} key={listOption.optionName} />\r\n          );\r\n        });\r\n        options.push(\r\n          <FormControl\r\n            key={option.label}\r\n            sx={{\r\n              marginBottom: '2rem',\r\n            }}\r\n          >\r\n            <FormLabel sx={{ color: primaryColor }} id=\"radio-buttons-group-label\">{<b>{option.label}</b>}</FormLabel>\r\n            <FormGroup>\r\n              {listOptions}\r\n            </FormGroup>\r\n          </FormControl >\r\n        );\r\n        options.push(<br></br>);\r\n      }\r\n    });\r\n  }\r\n  options.push(\r\n    <div>\r\n      <QuantitySelector quantity={quantity} setQuantity={setQuantity} popup={true} />\r\n    </div>\r\n  );\r\n\r\n  const handleClose = () => {\r\n    props.setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\r\n  React.useEffect(() => {\r\n    if (props.open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n\r\n      if (props.customizationOptions) {\r\n        props.customizationOptions.forEach((option) => {\r\n          if (option.componentType == 'Single') {\r\n            let defaultValue: string = option.options[0].optionName;\r\n            if (option.options[0].price) {\r\n              defaultValue = `${option.options[0].optionName}--${option.options[0].price}`\r\n            }\r\n            setValues(\r\n              {\r\n                ...values,\r\n                [option.summaryViewLabel]: defaultValue,\r\n              }\r\n            );\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }, [props.open]);\r\n\r\n  const title = (\r\n    <div>\r\n      <label style={{ color: primaryColor, fontSize: \"2rem\", fontStyle: \"bold\" }}>\r\n        {props.name}\r\n      </label>\r\n      <div>\r\n        <Rating name=\"read-only\" value={props.rating} readOnly />\r\n      </div>\r\n      <div style={{ display: 'inline-flex' }}>\r\n        <label>\r\n          {`$${props.price} `}\r\n        </label>\r\n      </div>\r\n      <div style={{ display: 'inline-flex', paddingLeft: '65%' }}>\r\n        <label>\r\n          {`${props.calories} calories`}\r\n        </label>\r\n      </div>\r\n    </div >\r\n  );\r\n\r\n  const handleSubmit = () => {\r\n    const tempItem = { name: props.name, quantity: quantity, price: props.price } as itemProps;\r\n    const tempData = [] as optionsProps[];\r\n    for (const key in values) {\r\n      console.log(values[key]);\r\n      if (Array.isArray(values[key])) {\r\n        console.log(values[key]);\r\n        values[key].forEach((value: any) => {\r\n          tempData.push({ name: value.optionName, price: value.price ? value.price : 0 });\r\n        });\r\n      } else {\r\n        const tempName = values[key].split('--')[0]\r\n        let tempPrice = values[key].split('--')[1]\r\n        tempData.push({ name: tempName, price: parseInt(tempPrice ? tempPrice : '0') });\r\n      }\r\n    }\r\n    tempItem.options = tempData;\r\n    console.log(tempItem);\r\n    props.setCart([...props.cart, tempItem]);\r\n    handleClose();\r\n  }\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        open={props.open}\r\n        onClose={handleClose}\r\n        scroll={scroll}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">{title}</DialogTitle>\r\n        <Box\r\n          component=\"img\"\r\n          sx={{\r\n            height: '22rem',\r\n            width: '100%',\r\n          }}\r\n          alt={props.name}\r\n          src={props.image}\r\n        />\r\n        <DialogContent dividers={scroll === 'paper'}>\r\n          {props.ingrediants && props.ingrediants.length > 0 ?\r\n            <TableContainer sx={{ marginTop: '2vh', marginBottom: '5vh' }} component={Paper}>\r\n              <Table sx={{}} aria-label=\"cart table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <IconButton\r\n                        aria-label=\"expand row\"\r\n                        size=\"small\"\r\n                        onClick={() => setOpenTable(!openTable)}\r\n                      >\r\n                        {openTable ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                      </IconButton><label style={{ color: primaryColor }}><b>Ingrediants</b></label></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <Collapse in={openTable} timeout=\"auto\" unmountOnExit>\r\n                  <TableBody>\r\n                    {props.ingrediants.map((item) => (\r\n                      <TableRow key={item}>\r\n                        <TableCell sx={{ width: '100vw' }}>\r\n                          {item}\r\n                        </TableCell>\r\n                      </TableRow>))}\r\n                  </TableBody>\r\n                </Collapse>\r\n              </Table>\r\n            </TableContainer> : null}\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n            {options}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleSubmit}>Add to Cart</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default page;","import React from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\n\r\nexport interface quantitySelectorProps {\r\n  quantity: number\r\n  setQuantity: React.Dispatch<React.SetStateAction<number>>,\r\n  popup: boolean,\r\n}\r\n\r\nconst QuantitySelector = (props: quantitySelectorProps) => {\r\n  const handlePlus = () => {\r\n    if (props.quantity < 99) {\r\n      props.setQuantity(props.quantity + 1);\r\n    }\r\n  }\r\n\r\n  const handleMinus = () => {\r\n    if (props.quantity > 1) {\r\n      props.setQuantity(props.quantity - 1);\r\n    }\r\n  }\r\n\r\n  if (props.popup) {\r\n    return (\r\n      <div onClick={(e) => { }} style={{ paddingLeft: '30%' }}>\r\n        <div style={{ display: 'inline-flex', paddingRight: '10%' }}>\r\n          <IconButton aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => handleMinus()}>\r\n            <RemoveIcon sx={{ color: 'red', fontSize: 50 }} />\r\n          </IconButton>\r\n        </div>\r\n        <div style={{ display: 'inline-flex', paddingRight: '10%' }}>\r\n          <label style={{ fontSize: 50 }}>\r\n            {props.quantity}\r\n          </label>\r\n        </div>\r\n        <div style={{ display: 'inline-flex' }}>\r\n          <IconButton aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => handlePlus()}>\r\n            <AddIcon sx={{ color: 'green', fontSize: 50 }} />\r\n          </IconButton>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n  return (\r\n    <div onClick={(event) => {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    }} style={{ display: 'inline-flex' }}>\r\n      <div style={{ display: 'inline-flex', paddingRight: '10%' }}>\r\n        <IconButton aria-label=\"expand row\"\r\n          size=\"small\"\r\n          onClick={() => handleMinus()}>\r\n          <RemoveIcon sx={{ color: 'red', fontSize: 25 }} />\r\n        </IconButton>\r\n      </div>\r\n      <div style={{ display: 'inline-flex', paddingRight: '10%' }}>\r\n        <label style={{ fontSize: 25 }}>\r\n          {props.quantity}\r\n        </label>\r\n      </div>\r\n      <div style={{ display: 'inline-flex' }}>\r\n        <IconButton aria-label=\"expand row\"\r\n          size=\"small\"\r\n          onClick={() => handlePlus()}>\r\n          <AddIcon sx={{ color: 'green', fontSize: 25 }} />\r\n        </IconButton>\r\n      </div>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default QuantitySelector;\r\n","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport QuantitySelector from './QuantitySelector';\r\n\r\ntype Props = {\r\n    item: any;\r\n    handleClick: (item: any) => void;\r\n    addToCart: (item: any, quantity: number) => void,\r\n}\r\n\r\nexport default function ItemCard(props: Props) {\r\n    const [shadow, setShadow] = React.useState(1);\r\n    const [quantity, setQuantity] = React.useState(1);\r\n\r\n    return (\r\n        <Card sx={{ maxWidth: 350, boxShadow: shadow, cursor: \"pointer\", backgroundColor: \"linen\" }} onClick={() => props.handleClick(props.item)} onMouseOver={() => setShadow(3)} onMouseOut={() => setShadow(1)}>\r\n            <CardMedia\r\n                component=\"img\"\r\n                height=\"200\"\r\n                image={props.item.Image}\r\n                alt=\"dish image\"\r\n            />\r\n            <CardContent>\r\n                <Typography sx={{ fontWeight: 'bold' }} variant=\"h6\">\r\n                    {props.item.Name}\r\n                </Typography>\r\n                <Typography sx={{ mb: 1.5 }} color=\"black\">\r\n                    $ {props.item.Price}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                {props.item.customizationOptions && props.item.customizationOptions.length > 0 ?\r\n                    <Button sx={{ marginRight: '0', display: 'inline-flex', color: \"black\" }} size=\"small\" onMouseDown={event => event.stopPropagation()}\r\n                        onClick={event => {\r\n                            event.stopPropagation();\r\n                            event.preventDefault();\r\n                            props.handleClick(props.item);\r\n                        }}><b>Customize</b></Button> :\r\n                    <div style={{ display: 'inline-flex' }}>\r\n                        <div>\r\n                            <QuantitySelector quantity={quantity} setQuantity={setQuantity} popup={false} />\r\n                        </div>\r\n                        &nbsp;\r\n                        &nbsp;\r\n                        <div>\r\n                            <Button sx={{ color: \"black\" }} size=\"small\" onMouseDown={event => event.stopPropagation()}\r\n                                onClick={event => {\r\n                                    event.stopPropagation();\r\n                                    event.preventDefault();\r\n                                    props.addToCart(props.item, quantity);\r\n                                }}><b>Add To Cart</b></Button>\r\n                        </div>\r\n                    </div>}\r\n            </CardActions>\r\n        </Card >\r\n    );\r\n}","import React from 'react';\r\nimport { Global } from '@emotion/react';\r\nimport { styled } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { grey } from '@mui/material/colors';\r\nimport Typography from '@mui/material/Typography';\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\n\r\nexport interface cartProps {\r\n    cart: itemProps[],\r\n    setCart: any,\r\n    bleeding: number,\r\n    open: boolean,\r\n    toggleDrawer: any,\r\n    setHistory: any,\r\n}\r\n\r\nexport interface itemProps {\r\n    name: string;\r\n    price: number;\r\n    quantity: number;\r\n    options?: optionsProps[];\r\n}\r\n\r\nexport interface optionsProps {\r\n    name: string;\r\n    price: number;\r\n}\r\n\r\nconst Root = styled('div')(({ theme }) => ({\r\n    height: '100%',\r\n    backgroundColor:\r\n        theme.palette.mode === 'dark' ? grey[100] : theme.palette.background.default,\r\n}));\r\n\r\nconst StyledBox = styled(Box)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#fff' : 'linen',\r\n}));\r\n\r\nconst Puller = styled(Box)(({ theme }) => ({\r\n    width: 30,\r\n    height: 6,\r\n    backgroundColor: theme.palette.mode === 'dark' ? grey[300] : grey[900],\r\n    borderRadius: 3,\r\n    position: 'absolute',\r\n    top: 8,\r\n    left: 'calc(50% - 15px)',\r\n}));\r\n\r\nconst cart = (props: cartProps) => {\r\n\r\n    let navigate = useNavigate();\r\n    const routeChange = () => {\r\n        props.setHistory()\r\n        let path = `/summary`;\r\n        navigate(path);\r\n    }\r\n    \r\n    const order = () => {\r\n        props.setHistory()\r\n        props.setCart([])\r\n    }\r\n\r\n    const handleDelete = (item: itemProps) => {\r\n        var index = props.cart.indexOf(item);\r\n        if (index !== -1) {\r\n            var temp = props.cart\r\n            temp.splice(index, 1)\r\n            console.log(temp)\r\n            props.setCart([...temp])\r\n        }\r\n    }\r\n\r\n    const Row = (props: {item: itemProps}) => {\r\n        const { item } = props;\r\n        const [open, setOpen] = React.useState(false);\r\n        \r\n        const getOptionsubtotal = (item: itemProps) => {\r\n          var optionPrice = 0\r\n          if (item.options) {\r\n            item.options.map((option) => {\r\n              optionPrice += option.price\r\n            })\r\n          }\r\n          return optionPrice\r\n        }   \r\n  \r\n        return (\r\n          <React.Fragment>\r\n            <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n              <TableCell>\r\n              <Button onClick={(a) => handleDelete(item)}>\r\n                    <DeleteIcon style={{\r\n                    color: \"#FF0000\",\r\n                }}/>\r\n                </Button>\r\n                { item.options && item.options.length > 0 ?\r\n                  <IconButton\r\n                  aria-label=\"expand row\"\r\n                  size=\"small\"\r\n                  onClick={() => setOpen(!open)}\r\n                  >\r\n                  {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                  </IconButton>\r\n                  : <></>\r\n                }\r\n               \r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">{item.name}</TableCell>\r\n              <TableCell align=\"right\">${item.price}</TableCell>\r\n              <TableCell align=\"right\">\r\n                {(item.options && getOptionsubtotal(item) > 0)\r\n                  ? \"$\" + getOptionsubtotal(item) \r\n                  : \"\"}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{item.quantity}</TableCell>\r\n              <TableCell align=\"right\">${\r\n              item.options !== undefined \r\n                ? ((item.price + getOptionsubtotal(item) )* item.quantity).toFixed(2)\r\n                : (item.price * item.quantity)\r\n              }\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                  <Box ml=\"61%\" mr={3}>\r\n                    <Table size=\"small\" aria-label=\"purchases\" >\r\n                    <TableRow>\r\n                    </TableRow>\r\n                      {(item.options === undefined) \r\n                        ? <></> \r\n                        : // render each option name and price in condensed table\r\n                        <TableBody>\r\n                          {item.options &&\r\n                          item.options.map((option:optionsProps) => (\r\n                            <TableRow>\r\n                              <TableCell align=\"left\">{option.name}</TableCell>\r\n                              <TableCell align=\"right\">\r\n                                {option.price == 0 ? '' : '+ $' + option.price}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                        </TableBody>\r\n                      }\r\n                    </Table>\r\n                  </Box>\r\n                </Collapse>\r\n              </TableCell>\r\n            </TableRow>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n\r\n    const CollapsibleTable = () => {\r\n        return (\r\n          <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 700 }} aria-label=\"cart table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell><b>Details</b></TableCell>\r\n                  <TableCell><b>Name</b></TableCell>\r\n                  <TableCell align=\"right\"><b>Price</b></TableCell>\r\n                  <TableCell align=\"right\"><b>Options</b></TableCell>\r\n                  <TableCell align=\"right\"><b>Quantity</b></TableCell>\r\n                  <TableCell align=\"right\"><b>Total</b></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.cart.map((item) => ( <Row key={item.name} item={item} /> ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        );\r\n      }\r\n\r\n    return (\r\n        <Root>\r\n            <CssBaseline />\r\n            <Global\r\n                styles={{\r\n                    '.MuiDrawer-root > .MuiPaper-root': {\r\n                        height: `calc(90% - ${props.bleeding}px)`,\r\n                        overflow: 'visible',\r\n                    },\r\n                }}\r\n            />\r\n            <SwipeableDrawer\r\n                anchor=\"bottom\"\r\n                open={props.open}\r\n                onClose={props.toggleDrawer()}\r\n                onOpen={props.toggleDrawer()}\r\n                swipeAreaWidth={props.bleeding}\r\n                disableSwipeToOpen={false}\r\n                ModalProps={{\r\n                    keepMounted: true,\r\n                }}\r\n            >\r\n                <StyledBox\r\n                    sx={{\r\n                        px: 2,\r\n                        pb: 2,\r\n                        height: '30%',\r\n                    }}\r\n                >\r\n                    &nbsp;\r\n                    &nbsp;\r\n                    &nbsp;\r\n                    &nbsp;\r\n                    <Typography\r\n                        align='center'\r\n                        variant='h2'\r\n                    >\r\n                        Shopping Cart\r\n                    </Typography>\r\n                </StyledBox>\r\n                <StyledBox\r\n                    sx={{\r\n                        px: 2,\r\n                        pb: 2,\r\n                        height: '100%',\r\n                        overflow: 'auto',\r\n                    }}\r\n                >\r\n                    <CollapsibleTable/>\r\n                    <Typography\r\n                        align='center'\r\n                        variant='h6'\r\n                    >\r\n                        Total: ${(props.cart.reduce((sum: number, item: itemProps) =>\r\n                            sum + (item.quantity * (item.price + (\r\n                                item.options ? (\r\n                                    item.options.reduce((optionSum: number, optionItem) => optionSum + optionItem.price, 0)\r\n                                ) as number : 0\r\n                            ))), 0)).toFixed(2)}\r\n                    </Typography>\r\n                    <Box textAlign='center'>\r\n                        <Button variant='contained' onClick={order}>\r\n                            Order\r\n                        </Button>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Button variant='contained' onClick={routeChange}>\r\n                            Order and Pay\r\n                        </Button>\r\n                    </Box>\r\n                </StyledBox >\r\n            </SwipeableDrawer >\r\n        </Root >\r\n    );\r\n}\r\n\r\nexport default cart;","import React, { useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Popup, { custimizationOptionProps, custimizationOptionsList, customizationType, popupProps } from './PopupPage';\r\nimport ItemCard from \"../Components/MenuItemCard\";\r\nimport * as menuItem from './../data/menuData.json';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Cart, { itemProps, optionsProps } from \"../Components/Cart\";\r\nimport { Box, height } from '@mui/system';\r\nimport Typography from '@mui/material/Typography';\r\nimport { ShoppingCart } from '@mui/icons-material';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: number;\r\n    value: number;\r\n}\r\n\r\nconst customizationOptions: custimizationOptionProps[] = [\r\n    {\r\n        componentType: 'Single',\r\n        label: \"Select Cheese\",\r\n        summaryViewLabel: \"Cheese\",\r\n        options: [\r\n            {\r\n                optionName: \"Mozerella\"\r\n            } as custimizationOptionsList\r\n            ,\r\n            {\r\n                optionName: \"Cheddar\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Special Cheese\",\r\n                price: 2.99\r\n            } as custimizationOptionsList\r\n        ] as custimizationOptionsList[]\r\n    },\r\n    {\r\n        componentType: 'Multi',\r\n        label: \"Select Toppings\",\r\n        summaryViewLabel: \"Toppings\",\r\n        options: [\r\n            {\r\n                optionName: \"Bacon\",\r\n                price: 1.99\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Pepporoni\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Mushrooms\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Green Peppers\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Onions\"\r\n            } as custimizationOptionsList,\r\n            {\r\n                optionName: \"Yellow Peppers\"\r\n            } as custimizationOptionsList\r\n        ]\r\n    }\r\n]\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div style={{ paddingLeft: '2.5%' }}\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }} >\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )\r\n            }\r\n        </div >\r\n    );\r\n}\r\n\r\nconst page = (props: { orderHistoryProps: itemProps[] }) => {\r\n    // const { orderHistory, setOrderHistory } = props;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedItem, setSelectedItem] = React.useState({} as popupProps);\r\n    const [openCart, setOpenCart] = React.useState(false);\r\n    const [cart, setCart] = React.useState([] as itemProps[]);\r\n    const [mains, setMains] = React.useState([] as JSX.Element[]);\r\n    const [Snacks, setSnacks] = React.useState([] as JSX.Element[]);\r\n    const [desserts, setDesserts] = React.useState([] as JSX.Element[]);\r\n    const [drinks, setDrinks] = React.useState([] as JSX.Element[]);\r\n\r\n    useEffect(() => { document.body.style.backgroundColor = 'lightcyan' }, [])\r\n\r\n    const toggleDrawer = () => () => {\r\n        setOpenCart(!openCart);\r\n    };\r\n\r\n    // Need to add this function to onClick of all menu cards and pass the card values to setSelectedItem.\r\n    // Card values should be of type popupProps and each menu card should have these values created\r\n\r\n    const handleClickOpen = (item: any) => {\r\n        setOpen(true);\r\n        const popup: popupProps = {\r\n            open: true,\r\n            setOpen: setOpen,\r\n            name: item.Name,\r\n            price: item.Price,\r\n            image: item.Image,\r\n            rating: item.Rating,\r\n            ingrediants: item.Ingrediants,\r\n            calories: item.Calories,\r\n            customizationOptions: item.customizationOptions,\r\n            setCart: setCart,\r\n            cart: cart,\r\n        }\r\n        setSelectedItem(popup);\r\n    };\r\n\r\n    const sleep = (ms: number) => new Promise((r) => setTimeout(r, ms));\r\n\r\n    const addToCart = (item: any, quantity: number) => {\r\n        console.log(cart);\r\n        const tempItem = { name: item.Name, quantity: quantity, price: item.Price } as itemProps;\r\n        console.log([...cart, tempItem]);\r\n        setCart([...cart, tempItem]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(cart);\r\n    }, [cart])\r\n\r\n    const setOrderHistory = () => {\r\n        console.log(\"cart\", cart)\r\n        cart.map((item) => {\r\n            props.orderHistoryProps.push(item)\r\n        })\r\n        // props.orderHistoryProps.extend(...cart)\r\n    }\r\n\r\n\r\n    const itemNum = menuItem.menuItems.length;\r\n\r\n    useEffect(() => {\r\n        let tempMains: JSX.Element[] = [];\r\n        let tempSnacks: JSX.Element[] = [];\r\n        let tempDesserts: JSX.Element[] = [];\r\n        let tempDrinks: JSX.Element[] = [];\r\n        menuItem.menuItems.forEach((item) => {\r\n            const itemCard =\r\n                (<Grid item xs={3}>\r\n                    <ItemCard item={item} handleClick={handleClickOpen} addToCart={addToCart} />\r\n                </Grid>)\r\n            if (item.Tab === \"Mains\") {\r\n                tempMains.push(itemCard);\r\n            } else if (item.Tab === \"Snacks\") {\r\n                tempSnacks.push(itemCard);\r\n            } else if (item.Tab === \"Desserts\") {\r\n                tempDesserts.push(itemCard);\r\n            } else if (item.Tab === \"Drinks\") {\r\n                tempDrinks.push(itemCard);\r\n            }\r\n        })\r\n        setMains(tempMains);\r\n        setSnacks(tempSnacks);\r\n        setDesserts(tempDesserts);\r\n        setDrinks(tempDrinks);\r\n    }, [cart]);\r\n\r\n    function a11yProps(index: number) {\r\n        return {\r\n            id: `simple-tab-${index}`,\r\n            'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChangeTabs = (event: React.SyntheticEvent, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    //Button can be removed but need to add an onClick function to all the menu cards, keep the line to render the popup as well\r\n    return (\r\n        <div style={{ background: 'lightCyan' }}>\r\n            <div>\r\n                <Box\r\n                    m={1}\r\n                    borderBottom={1}\r\n                    borderColor='divider'\r\n                    display=\"flex\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"flex-end\">\r\n                    <div>\r\n                        <Tabs value={value} onChange={handleChangeTabs} aria-label=\"basic tabs\">\r\n                            <Tab sx={{ fontWeight: 'bold', color: 'black' }} label=\"Mains\" {...a11yProps(0)} />\r\n                            <Tab sx={{ fontWeight: 'bold', color: 'black' }} label=\"Snacks\" {...a11yProps(1)} />\r\n                            <Tab sx={{ fontWeight: 'bold', color: 'black' }} label=\"Desserts\" {...a11yProps(2)} />\r\n                            <Tab sx={{ fontWeight: 'bold', color: 'black' }} label=\"Drinks\" {...a11yProps(3)} />\r\n                        </Tabs>\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"2rem\", paddingBottom: \"0.5rem\" }}>\r\n                        <Button variant='contained' onClick={toggleDrawer()}><ShoppingCart /></Button>\r\n                    </div>\r\n                </Box >\r\n                <TabPanel value={value} index={0}>\r\n                    <Grid container spacing={2} direction='row'>\r\n                        {mains}\r\n                    </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <Grid container spacing={2} direction='row'>\r\n                        {Snacks}\r\n                    </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    <Grid container spacing={2} direction='row'>\r\n                        {desserts}\r\n                    </Grid>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                    <Grid container spacing={2} direction='row'>\r\n                        {drinks}\r\n                    </Grid>\r\n                </TabPanel>\r\n                {open ? <Popup {...selectedItem} /> : null}\r\n                <Cart cart={cart} setCart={setCart} bleeding={0} open={openCart} toggleDrawer={toggleDrawer} setHistory={setOrderHistory} />\r\n            </div >\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default page;","import React, { useEffect } from 'react';\r\nimport { useState } from 'react'; \r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nimport { itemProps, optionsProps } from \"../Components/Cart\";\r\n\r\n\r\n\r\n// summary page component\r\nconst summary = (props: {orderHistoryProps: itemProps[]}) => {\r\n  useEffect(() => { document.body.style.backgroundColor = 'lightcyan' }, [])\r\n\r\n  console.log(props)\r\n   const [tip, setTip] = useState(0)\r\n\r\n  // calculates subtotal \r\n  const getSubtotalPrice = () => {\r\n    var sum = 0\r\n    props.orderHistoryProps.map((order) => {\r\n      var itemPrice = 0\r\n      itemPrice += order.price \r\n      if (order.options) {\r\n        order.options.map((option) => { itemPrice += option.price })\r\n      }\r\n      itemPrice *= order.quantity\r\n      sum += itemPrice\r\n    })\r\n    return sum\r\n  }\r\n   const subtotal = getSubtotalPrice()\r\n\r\n   const tax = (subtotal * 0.13)\r\n   const totalPrice = subtotal + tax + (subtotal * tip)\r\n\r\n  // for back button\r\n   let navigate = useNavigate(); \r\n   const navigateToMainPage = () => {\r\n      let path = `/`\r\n      navigate(path)\r\n   }\r\n\r\n\r\n    // creates each row (collapsible) of the CollapsibleTable component\r\n    const Row = (props: {item: itemProps}) => {\r\n      const { item } = props;\r\n      const [open, setOpen] = React.useState(false);\r\n      \r\n      const getOptionsubtotal = (item: itemProps) => {\r\n        var optionPrice = 0\r\n        if (item.options) {\r\n          item.options.map((option) => {\r\n            optionPrice += option.price\r\n          })\r\n        }\r\n        return optionPrice\r\n      }   \r\n\r\n      return (\r\n        <React.Fragment>\r\n          <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n            <TableCell>\r\n              { item.options && item.options.length > 0 ?\r\n                <IconButton\r\n                aria-label=\"expand row\"\r\n                size=\"small\"\r\n                onClick={() => setOpen(!open)}\r\n                >\r\n                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                </IconButton>\r\n                : <></>\r\n              }\r\n             \r\n            </TableCell>\r\n            <TableCell component=\"th\" scope=\"row\">{item.name}</TableCell>\r\n            <TableCell align=\"right\">${item.price}</TableCell>\r\n            <TableCell align=\"right\">\r\n              {(item.options && getOptionsubtotal(item) > 0)\r\n                ? \"$\" + getOptionsubtotal(item) \r\n                : \"\"}\r\n            </TableCell>\r\n            <TableCell align=\"right\">{item.quantity}</TableCell>\r\n            <TableCell align=\"right\">${\r\n            item.options !== undefined \r\n              ? ((item.price + getOptionsubtotal(item) )* item.quantity).toFixed(2)\r\n              : (item.price * item.quantity)\r\n            }\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n              <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <Box ml=\"61%\" mr={3}>\r\n                  <Table size=\"small\" aria-label=\"purchases\" >\r\n                  <TableRow>\r\n                  </TableRow>\r\n                    {(item.options === undefined) \r\n                      ? <></> \r\n                      : // render each option name and price in condensed table\r\n                      <TableBody>\r\n                        {item.options &&\r\n                        item.options.map((option:optionsProps) => (\r\n                          <TableRow>\r\n                            <TableCell align=\"left\">{option.name}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              {option.price == 0 ? '' : '+ $' + option.price}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    }\r\n                  </Table>\r\n                </Box>\r\n              </Collapse>\r\n            </TableCell>\r\n          </TableRow>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    \r\n    // parent table\r\n     const CollapsibleTable = () => {\r\n      return (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell><b>Details</b></TableCell>\r\n                <TableCell><b>Name</b></TableCell>\r\n                <TableCell align=\"right\"><b>Price</b></TableCell>\r\n                <TableCell align=\"right\"><b>Options</b></TableCell>\r\n                <TableCell align=\"right\"><b>Quantity</b></TableCell>\r\n                <TableCell align=\"right\"><b>Total</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {props.orderHistoryProps.map((item) => ( <Row key={item.name} item={item} /> ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      );\r\n    }\r\n\r\n    // table that displays subtotal, tax and tip \r\n    const Subtotal = () => {\r\n      return (\r\n        <>\r\n        <TableContainer component={Paper}>\r\n          <Table sx={{ minWidth: 700 }} aria-label=\"spanning table\">\r\n             <TableBody>\r\n              <TableRow>\r\n                <TableCell>Subtotal</TableCell>\r\n                <TableCell align=\"right\"></TableCell>\r\n                <TableCell align=\"right\">${subtotal.toFixed(2)}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Tax</TableCell>\r\n                <TableCell align=\"right\">{\"13%\"}</TableCell>\r\n                <TableCell align=\"right\">${tax.toFixed(2)}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Tip</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <ButtonGroup variant=\"outlined\">\r\n                       <Button \r\n                        onClick={() => setTip(0)}\r\n                        color={tip === 0 ? \"secondary\" : \"primary\"}\r\n                       > \r\n                        0%\r\n                       </Button>\r\n                       <Button \r\n                        onClick={() => setTip(0.1)}\r\n                        color={tip === 0.1 ? \"secondary\" : \"primary\"}\r\n                       >\r\n                        10%\r\n                       </Button>\r\n\r\n                       <Button \r\n                        onClick={() => setTip(0.2)}\r\n                        color={tip === 0.2 ? \"secondary\" : \"primary\"}\r\n                       >\r\n                        20%\r\n                       </Button>\r\n                    </ButtonGroup>\r\n                </TableCell>\r\n                <TableCell align=\"right\">${(tip * subtotal).toFixed(2)}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Box textAlign='right' mr={3}>\r\n          <h2>Total: ${totalPrice.toFixed(2)}</h2>\r\n        </Box>\r\n        </>\r\n      );\r\n    }\r\n\r\n\r\n    // main \r\n    return (\r\n         <Box \r\n          mx={10} \r\n          my={3} \r\n         >\r\n            <h1>Payment</h1>\r\n            <h2>Order History</h2>\r\n            <CollapsibleTable/>\r\n            \r\n            <h2>Summary</h2>\r\n            <Subtotal/>\r\n         \r\n            <Box\r\n              my={5} \r\n              mx={3}\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\"\r\n              }}\r\n            >\r\n               <Button \r\n                variant=\"contained\"\r\n                onClick={navigateToMainPage}\r\n               >Back</Button>\r\n               <Button variant=\"contained\">Proceed to Payment</Button>\r\n            </Box>\r\n         </Box>\r\n    );\r\n}\r\n \r\nexport default summary;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\nimport Menu from './Pages/MainPage';\r\nimport Popup, { custimizationOptionProps, custimizationOptionsList, customizationType, popupProps } from './Pages/PopupPage';\r\nimport Summary from './Pages/SummaryPage';\r\nimport Cart, { cartProps, itemProps, optionsProps } from './Components/Cart'\r\n\r\nconst customizationOptions: custimizationOptionProps[] = [\r\n  {\r\n    componentType: customizationType.Single,\r\n    label: \"Select Cheese\",\r\n    summaryViewLabel: \"Cheese\",\r\n    options: [\r\n      {\r\n        optionName: \"Mozerella\"\r\n      } as custimizationOptionsList\r\n      ,\r\n      {\r\n        optionName: \"Cheddar\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Special Cheese\",\r\n        price: 2.99\r\n      } as custimizationOptionsList\r\n    ] as custimizationOptionsList[]\r\n  },\r\n  {\r\n    componentType: customizationType.Multi,\r\n    label: \"Select Toppings\",\r\n    summaryViewLabel: \"Toppings\",\r\n    options: [\r\n      {\r\n        optionName: \"Bacon\",\r\n        price: 1.99\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Pepporoni\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Mushrooms\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Green Peppers\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Onions\"\r\n      } as custimizationOptionsList,\r\n      {\r\n        optionName: \"Yellow Peppers\"\r\n      } as custimizationOptionsList\r\n    ]\r\n  }\r\n]\r\n\r\nclass App extends Component {\r\n  render() {\r\n    var orderHistory:itemProps[]  = []\r\n    var props = {\r\n      orderHistoryProps: orderHistory\r\n    }\r\n\r\n    return (\r\n      <HashRouter>\r\n        <div>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Menu {...props}/>} />\r\n            <Route path=\"/summary\" element={<Summary {...props}/>} />\r\n          </Routes>\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}